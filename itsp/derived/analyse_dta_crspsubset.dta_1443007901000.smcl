{smcl}
{txt}{sf}{ul off}

{com}. /** 
>  * A do file to run the standard stats for a whole data set. 
>  *
>  * Note that you must delete the files in the derived directory
>  * for changes to be reflected in the output.
>  *
>  * @version 0.1
> */
. 
. // profiler on
. 
. cap noi {c -(}
. 
. use  "/Users/mas/Dropbox/Stata_conference_2015/itsp/crspsubset.dta"
. 
. describe, short

{txt}Contains data from {res}/Users/mas/Dropbox/Stata_conference_2015/itsp/crspsubset.dta
{txt}  obs:{res}       311,737                          
{txt} vars:{res}             3                          17 Nov 2007 14:05
{txt} size:{res}     3,740,844                          
{txt}Sorted by:  {res}permno  cdate
{com}. 
. local N = r(N)
. local variables = r(k)
. 
. di "@N `N'"
{res}@N 311737
{com}. di "@variables `variables'"
{res}@variables 3
{com}. 
. datasignature
  {res}311737:3(90203):602911829:11304603
{com}. local datasig = "`r(datasignature)'"
. 
. di "@datasignature `datasig'"
{res}@datasignature 311737:3(90203):602911829:11304603
{com}. 
. cap noi xtset
{res}{txt}{col 8}panel variable:  {res}permno (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}cdate, 02jan2002 to 29dec2006, but with gaps
{txt}{col 17}delta:  {res}1 day
{com}. if ( !_rc ) {c -(}
.     di "@timevar `r(timevar)'"
{res}@timevar cdate
{com}.     di "@panelvar `r(panelvar)'"
{res}@panelvar permno
{com}. {c )-}
. 
. notes _dta
{res}{com}. 
. qui {c -(}
. 
. foreach var of varlist * {c -(}
{txt}  2{com}. 
. di "=====`var'====="
{txt}  3{com}. qui {c -(}
{txt}  4{com}. local category_cutoff = 30
{txt}  5{com}. 
. // this takes very long on large datasets (and does mostly the same as other things below)
. // codebook `var'
. 
. local isstr = ""
{txt}  6{com}. local unique = ""
{txt}  7{com}. local total = ""
{txt}  8{com}. local class = ""
{txt}  9{com}. 
. local type : type `var' 
{txt} 10{com}. local label : variable label `var' 
{txt} 11{com}. 
. local class = "other"
{txt} 12{com}. 
. // test for string
. capture confirm string variable `var'
{txt} 13{com}. if ( !_rc ) {c -(}
{txt} 14{com}.     // we now it is a string
.     local isstr = "YES"
{txt} 15{com}.     capture tab `var', matcell( freq )
{txt} 16{com}.     if ( !_rc ) {c -(}
{txt} 17{com}.     
.         // not too many obs
.         local total = `r(N)'
{txt} 18{com}.         local unique = r(r)
{txt} 19{com}. 
.         if ( `unique' < `category_cutoff' ) {c -(}
{txt} 20{com}.         forvalues i=1/`unique' {c -(}
{txt} 21{com}.             if ( `i' == 1 ) {c -(}
{txt} 22{com}.                 noi di "@freq " _continue
{txt} 23{com}.             {c )-}
{txt} 24{com}.             noi di freq[`i',1] _continue
{txt} 25{com}.             if ( `i' == `unique' ) {c -(}
{txt} 26{com}.                 noi di ""
{txt} 27{com}.             {c )-}
{txt} 28{com}.             else {c -(}
{txt} 29{com}.                 noi di ", " _continue
{txt} 30{com}.             {c )-}
{txt} 31{com}.         {c )-}
{txt} 32{com}. 
.         levelsof `var', local(levels)
{txt} 33{com}.         local i = 1
{txt} 34{com}.         foreach l of local levels {c -(}
{txt} 35{com}.             if ( `i' == 1 ) {c -(}
{txt} 36{com}.                 noi di "@values " _continue
{txt} 37{com}.             {c )-}
{txt} 38{com}.             noi di `""`l'""' _continue
{txt} 39{com}.             if ( `i' == `unique' ) {c -(}
{txt} 40{com}.                 noi di ""
{txt} 41{com}.             {c )-}
{txt} 42{com}.             else {c -(}
{txt} 43{com}.                 noi di ", " _continue
{txt} 44{com}.             {c )-}
{txt} 45{com}.             local i = `i' + 1
{txt} 46{com}.         {c )-}
{txt} 47{com}.         {c )-}
{txt} 48{com}.         
.         if ( `total' == 0 ) {c -(}
{txt} 49{com}.             local class = "empty"
{txt} 50{com}.         {c )-}
{txt} 51{com}.         else if ( `unique' == 1 ) {c -(}
{txt} 52{com}.             local class = "constant"
{txt} 53{com}.         {c )-}
{txt} 54{com}.         else if ( `unique' == 2 ) {c -(}
{txt} 55{com}.             local class = "dummy"
{txt} 56{com}.         {c )-}
{txt} 57{com}.         else if ( `unique' < `category_cutoff' & `unique' < `total' ) {c -(}
{txt} 58{com}.             local class = "category"
{txt} 59{com}.         {c )-}
{txt} 60{com}.         else if (`unique' == `total') {c -(}
{txt} 61{com}.             local class = "identifier"
{txt} 62{com}.         {c )-} 
{txt} 63{com}.         else {c -(}
{txt} 64{com}.             local class = "string"
{txt} 65{com}.         {c )-}        
{txt} 66{com}.     {c )-}
{txt} 67{com}.     else {c -(}
{txt} 68{com}.         // lots of observations, not sure what to do yet
.         // should get random samples here
.         noi di "@example0 " `var'[1]
{txt} 69{com}.     {c )-}
{txt} 70{com}. {c )-}
{txt} 71{com}. else {c -(}
{txt} 72{com}.     // else assume it is numeric
. 
.     noi inspect `var'
{txt} 73{com}. 
.     local total = r(N)
{txt} 74{com}.     local unique = r(N_unique)
{txt} 75{com}. 
.     if ( `unique' < `category_cutoff' ) {c -(}
{txt} 76{com}.         local cat = "YES"
{txt} 77{com}.     {c )-}
{txt} 78{com}. 
.     if ( "`unique'" != "." ) {c -(}
{txt} 79{com}.         if ( `total' == 0 ) {c -(}
{txt} 80{com}.             local class = "empty"
{txt} 81{com}.         {c )-}
{txt} 82{com}.         else if ( `unique' == 1 ) {c -(}
{txt} 83{com}.             local class = "constant"
{txt} 84{com}.         {c )-}
{txt} 85{com}.         else if ( `unique' == 2 ) {c -(}
{txt} 86{com}.             local class = "dummy"
{txt} 87{com}.         {c )-}
{txt} 88{com}.         else if ( `unique' < `category_cutoff' & `unique' < `total' ) {c -(}
{txt} 89{com}.             capture confirm string variable `var'
{txt} 90{com}.             if ( !_rc ) {c -(}
{txt} 91{com}.                 local class = "other"
{txt} 92{com}.             {c )-} 
{txt} 93{com}.             else {c -(}
{txt} 94{com}.                 local class = "category"
{txt} 95{com}.             {c )-}
{txt} 96{com}.         {c )-}
{txt} 97{com}.         else if (`r(N_unique)' == `r(N)') {c -(}
{txt} 98{com}.             local class = "identifier"
{txt} 99{com}.         {c )-}
{txt}100{com}.     {c )-}
{txt}101{com}. 
. // TODO this takes too long?   sum `var', detail
.     noi sum `var'
{txt}102{com}.     local min = r(min)
{txt}103{com}.     local max = r(max)
{txt}104{com}.     local nobs = r(N)
{txt}105{com}.     
.     // TODO maybe the precision should be handled later (vm?)
.     if ( ( "`type'" != "double" & "`type'" != "float" ) & "`class'" == "constant" ) {c -(}
{txt}106{com}.         noi di "@mean " %9.0f r(mean)
{txt}107{com}.     {c )-} 
{txt}108{com}.     else {c -(}
{txt}109{com}.         noi di "@mean " %9.3f r(mean)
{txt}110{com}.     {c )-}
{txt}111{com}.     noi di "@sd " %9.3f `r(sd)'
{txt}112{com}.     // noi di "@skewness " %9.3f `r(skewness)'
.     // noi di "@kurtosis " %9.3f `r(kurtosis)'
.     
.     if ( "`type'" == "double" | "`type'" == "float" ) {c -(}
{txt}113{com}.       noi di "@min " %9.3f `r(min)'
{txt}114{com}.       noi di "@max " %9.3f `r(max)'
{txt}115{com}.       // noi di "@p50 " %9.3f `r(p50)'
.     {c )-} 
{txt}116{com}.     else {c -(}
{txt}117{com}.       noi di "@min " %9.0f `r(min)'
{txt}118{com}.       noi di "@max " %9.0f `r(max)'
{txt}119{com}.       // noi di "@p50 " %9.0f `r(p50)'
.     {c )-}
{txt}120{com}. {c )-}
{txt}121{com}. 
. 
. if ( ( "`class'" == "constant" ) & ( "`isstr'"!= "YES" ) ) {c -(}
{txt}122{com}.     noi di "@values " `var'[1]
{txt}123{com}. {c )-}
{txt}124{com}. else if ( "`class'" == "category" | "`class'" == "dummy" ) {c -(}
{txt}125{com}.     cap noi {c -(}
{txt}126{com}.         if ( "`isstr'" != "YES" ) {c -(}
{txt}127{com}.             cap tab `var', matcell( freq ) matrow( name )
{txt}128{com}.             if ( _rc != 0 | ("`r(r)'" != "`unique'") ) {c -(}
{txt}129{com}.                 local class = "other"
{txt}130{com}.                 local unique = r(r)
{txt}131{com}.             {c )-}
{txt}132{com}.             else {c -(}
{txt}133{com}.                 forvalues i=1/`unique' {c -(}
{txt}134{com}.                     if ( `i' == 1 ) {c -(}
{txt}135{com}.                         noi di "@values " _continue
{txt}136{com}.                     {c )-}
{txt}137{com}.                     noi di name[`i',1] _continue
{txt}138{com}.                     if ( `i' == `unique' ) {c -(}
{txt}139{com}.                         noi di ""
{txt}140{com}.                     {c )-}
{txt}141{com}.                     else {c -(}
{txt}142{com}.                         noi di ", " _continue
{txt}143{com}.                     {c )-}
{txt}144{com}.                 {c )-}
{txt}145{com}.                 forvalues i=1/`unique' {c -(}
{txt}146{com}.                     if ( `i' == 1 ) {c -(}
{txt}147{com}.                         noi di "@names " _continue
{txt}148{com}.                     {c )-}
{txt}149{com}.                     local val = name[`i',1]
{txt}150{com}.                     local lab :label (`var') `val'
{txt}151{com}.                     noi di `""`lab'""' _continue
{txt}152{com}.                     if ( `i' == `unique' ) {c -(}
{txt}153{com}.                         noi di ""
{txt}154{com}.                     {c )-}
{txt}155{com}.                     else {c -(}
{txt}156{com}.                         noi di ", " _continue
{txt}157{com}.                     {c )-}
{txt}158{com}.                 {c )-}
{txt}159{com}.                 forvalues i=1/`unique' {c -(}
{txt}160{com}.                     if ( `i' == 1 ) {c -(}
{txt}161{com}.                         noi di "@freq " _continue
{txt}162{com}.                     {c )-}
{txt}163{com}.                     noi di freq[`i',1] _continue
{txt}164{com}.                     if ( `i' == `unique' ) {c -(}
{txt}165{com}.                         noi di ""
{txt}166{com}.                     {c )-}
{txt}167{com}.                     else {c -(}
{txt}168{com}.                         noi di ", " _continue
{txt}169{com}.                     {c )-}
{txt}170{com}.                 {c )-}
{txt}171{com}.             {c )-}
{txt}172{com}.         {c )-}
{txt}173{com}.     {c )-}
{txt}174{com}. {c )-}
{txt}175{com}. else {c -(}
{txt}176{com}.     noi di "@example0 " `var'[1]
{txt}177{com}. {c )-}
{txt}178{com}. 
. // histogram
. if ( "`isstr'" != "YES" & ("`class'" == "other" | "`class'" == "identifier") ) {c -(}
{txt}179{com}. cap noi {c -(}
{txt}180{com}.     tempvar h w
{txt}181{com}.     twoway__histogram_gen `var', gen( `h' `w' )
{txt}182{com}.     forvalues i=1/`=r(n_x)' {c -(}
{txt}183{com}.         if ( `i' == 1 ) {c -(}
{txt}184{com}.             noi di "@histh " _continue
{txt}185{com}.         {c )-}
{txt}186{com}.         noi di `h'[`i'] _continue
{txt}187{com}.         if ( `i' == `=r(n_x)' ) {c -(}
{txt}188{com}.             noi di ""
{txt}189{com}.         {c )-}
{txt}190{com}.         else {c -(}
{txt}191{com}.             noi di ", " _continue
{txt}192{com}.         {c )-}
{txt}193{com}.     {c )-}
{txt}194{com}.     forvalues i=1/`=r(n_x)' {c -(}
{txt}195{com}.         if ( `i' == 1 ) {c -(}
{txt}196{com}.             noi di "@histw " _continue
{txt}197{com}.         {c )-}
{txt}198{com}.         noi di `w'[`i'] _continue
{txt}199{com}.         if ( `i' == `=r(n_x)' ) {c -(}
{txt}200{com}.             noi di ""
{txt}201{com}.         {c )-}
{txt}202{com}.         else {c -(}
{txt}203{com}.             noi di ", " _continue
{txt}204{com}.         {c )-}
{txt}205{com}.     {c )-}
{txt}206{com}.     {c )-}
{txt}207{com}. {c )-}
{txt}208{com}. 
. noi di "@type `type'"
{txt}209{com}. noi di "@label `label'"
{txt}210{com}. noi di "@class `class'"
{txt}211{com}. noi di "@N_unique `unique'"
{txt}212{com}. noi di "@N `total'"
{txt}213{com}. 
. noi di as res " "
{txt}214{com}. noi di "_@NOTES"
{txt}215{com}. 
. noi notes `var'
{txt}216{com}. 
. noi di as res " "
{txt}217{com}. {c )-}
{txt}218{com}. 
. 
. {c )-}
=====permno=====

{res}permno:  CRSP Permanent Number                  {txt}Number of Observations
{hline 30}              {hline 30}
                                            Total   Integers   Nonintegers
{c |}                  {res}#         {txt}Negative           {res}-         -          -
{txt}{c |}                  {res}#         {txt}Zero               {res}-         -          -
{txt}{c |}                  {res}#         {txt}Positive       {res}311737     311737          -
{txt}{c |}  {res}#               #                        {txt}{hline 5}     {hline 5}      {hline 5}
{c |}  {res}#               #         {txt}Total          {res}311737     311737          -
{txt}{c |}  {res}#   #   #   #   #         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}10051             92655                     311737
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 6}permno {c |}{res}    311737    57299.22    26681.82      10051      92655
@mean 57299.220
@sd 26681.821
@min 10051.000
@max 92655.000
@example0 10051
@histh .00002837, .00001594, 9.625e-06, 5.280e-06, 5.280e-06, 5.280e-06, .00001386, .00001073, .00001322, .00003168, .00001962, .00001584, 2.640e-06, 5.280e-06, 2.640e-06, 1.258e-07, 5.280e-06, .00001056, 2.640e-06, 2.640e-06, 2.921e-06, 5.280e-06, .00001539, .0000165, .00001056, .00001056, 8.896e-06, 6.291e-08, 7.920e-06, 3.632e-06, .00001362, 5.427e-06, 3.909e-06, 9.460e-06, 9.237e-06, 3.603e-06, 5.459e-06, 2.640e-06, 2.640e-06, .00002283, .00006317, .0000255, .0000277, .00003265, .00003253, .00002057, .00003376, .00002464, .00001286, 7.379e-06, 5.914e-06
@histw 10815.852, 12345.556, 13875.259, 15404.963, 16934.666, 18464.371, 19994.074, 21523.777, 23053.482, 24583.186, 26112.889, 27642.592, 29172.297, 30702, 32231.703, 35291.109, 36820.816, 38350.52, 39880.223, 41409.926, 42939.629, 44469.332, 45999.035, 47528.742, 49058.445, 52117.852, 53647.555, 55177.258, 56706.965, 58236.668, 59766.371, 61296.074, 62825.777, 64355.48, 65885.188, 67414.891, 68944.594, 70474.297, 73533.703, 75063.406, 76593.109, 78122.813, 79652.516, 81182.219, 82711.93, 84241.633, 85771.336, 87301.039, 88830.742, 90360.445, 91890.148
@type float
@label CRSP Permanent Number
@class other
@N_unique .
@N 311737
 
_@NOTES
 
=====ret=====

ret:  Holding Period Return                     {txt}Number of Observations
{hline 27}                 {hline 30}
                                            Total   Integers   Nonintegers
{c |}      {res}#                     {txt}Negative       {res}151058         -      151058
{txt}{c |}      {res}#                     {txt}Zero           {res} 7007      7007          -
{txt}{c |}      {res}#                     {txt}Positive       {res}151259         -      151259
{txt}{c |}      {res}#                                    {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#                     {txt}Total          {res}309324      7007      302317
{txt}{c |}  {res}.   #   .   .   .         {txt}Missing        {res} 2413
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}-.9277108      1.733333                     311737
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 9}ret {c |}{res}    309324    .0004993    .0345929  -.9277108   1.733333
@mean     0.000
@sd     0.035
@min    -0.928
@max     1.733
@example0 .00333333
@histh .00013121, .0000656, .00019681, .00032802, .00026241, .00032802, .00039362, .00085285, .00124647, .00203371, .00492027, .00629795, .01357996, .04021505, .13691483, .9299975, 12.872094, 5.6335177, .48153087, .09997998, .03627883, .01384237, .00675718, .00459226, .00164009, .00118087, .00104966, .00045923, .00052483, .00032802, .00019681, .0000656, .00045923, .0000656, .00026241, .0000656, .0000656, .0000656
@histw -.90307152, -.75523573, -.70595717, -.65667856, -.6074, -.55812138, -.50884277, -.45956418, -.41028559, -.361007, -.31172842, -.2624498, -.21317123, -.16389263, -.11461403, -.06533544, -.01605685, .03322175, .08250034, .13177894, .18105753, .23033611, .27961472, .3288933, .37817189, .42745051, .47672909, .52600771, .57528627, .62456489, .67384344, .72312206, .77240068, .82167923, .87095785, 1.1666294, 1.2159081, 1.708694
@type float
@label Holding Period Return
@class other
@N_unique .
@N 309324
 
_@NOTES
 
=====cdate=====

cdate:                                          {txt}Number of Observations
{hline 8}                                    {hline 30}
                                            Total   Integers   Nonintegers
{c |}  {res}#                         {txt}Negative           {res}-         -          -
{txt}{c |}  {res}#   #   #   #             {txt}Zero               {res}-         -          -
{txt}{c |}  {res}#   #   #   #   #         {txt}Positive       {res}311737     311737          -
{txt}{c |}  {res}#   #   #   #   #                        {txt}{hline 5}     {hline 5}      {hline 5}
{c |}  {res}#   #   #   #   #         {txt}Total          {res}311737     311737          -
{txt}{c |}  {res}#   #   #   #   #         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}15342             17164                     311737
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 7}cdate {c |}{res}    311737     16209.9    525.4787      15342      17164
@mean 16209.901
@sd   525.479
@min 15342.000
@max 17164.000
@example0 15342
@histh .00063433, .00062282, .00064707, .00064098, .00060799, .00060609, .0006252, .00059696, .00064697, .00059126, .00056293, .0005557, .00057899, .00059649, .00061797, .00054382, .00056749, .00056625, .00058622, .000606, .00055304, .00052594, .00052461, .00054372, .00056587, .00058907, .00049314, .00053688, .00053355, .00055675, .00057871, .00053022, .0005055, .00052699, .00050408, .00057044, .00054724, .00052081, .00052043, .00052043, .00053954, .00055513, .0005016, .00044989, .00048744, .00050122, .00047679, .00049742, .0004767, .00049524, .00045245, .00049058, .00048525, .00047955
@histw 15358.87, 15392.611, 15426.352, 15460.093, 15493.833, 15527.574, 15561.314, 15595.056, 15628.796, 15662.537, 15696.277, 15730.019, 15763.759, 15797.5, 15831.241, 15864.981, 15898.723, 15932.463, 15966.204, 15999.944, 16033.686, 16067.426, 16101.167, 16134.907, 16168.648, 16202.389, 16236.13, 16269.87, 16303.611, 16337.352, 16371.093, 16404.834, 16438.574, 16472.314, 16506.055, 16539.797, 16573.537, 16607.277, 16641.018, 16674.76, 16708.5, 16742.24, 16775.982, 16809.723, 16843.463, 16877.203, 16910.945, 16944.686, 16978.426, 17012.166, 17045.908, 17079.648, 17113.389, 17147.129
@type float
@label 
@class other
@N_unique .
@N 311737
 
_@NOTES
 
{com}. 
. // noi profiler report
. // profiler off
. {c )-}
{txt}
{com}. 
. exit, clear STATA
