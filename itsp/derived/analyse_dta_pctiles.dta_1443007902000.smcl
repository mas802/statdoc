{smcl}
{txt}{sf}{ul off}

{com}. /** 
>  * A do file to run the standard stats for a whole data set. 
>  *
>  * Note that you must delete the files in the derived directory
>  * for changes to be reflected in the output.
>  *
>  * @version 0.1
> */
. 
. // profiler on
. 
. cap noi {c -(}
. 
. use  "/Users/mas/Dropbox/Stata_conference_2015/itsp/pctiles.dta"
{txt}(simulate: simpctile)
{com}. 
. describe, short

{txt}Contains data from {res}/Users/mas/Dropbox/Stata_conference_2015/itsp/pctiles.dta
{txt}  obs:{res}         1,000                          simulate: simpctile
{txt} vars:{res}             3                          30 Jan 2009 15:07
{txt} size:{res}        12,000                          
{txt}Sorted by:  
{com}. 
. local N = r(N)
. local variables = r(k)
. 
. di "@N `N'"
{res}@N 1000
{com}. di "@variables `variables'"
{res}@variables 3
{com}. 
. datasignature
  {res}1000:3(47364):1607268956:2988922299
{com}. local datasig = "`r(datasignature)'"
. 
. di "@datasignature `datasig'"
{res}@datasignature 1000:3(47364):1607268956:2988922299
{com}. 
. cap noi xtset
{err}panel variable not set; use {bf:xtset} {it:varname} ...
{com}. if ( !_rc ) {c -(}
.     di "@timevar `r(timevar)'"
.     di "@panelvar `r(panelvar)'"
. {c )-}
. 
. notes _dta
{res}{com}. 
. qui {c -(}
. 
. foreach var of varlist * {c -(}
{txt}  2{com}. 
. di "=====`var'====="
{txt}  3{com}. qui {c -(}
{txt}  4{com}. local category_cutoff = 30
{txt}  5{com}. 
. // this takes very long on large datasets (and does mostly the same as other things below)
. // codebook `var'
. 
. local isstr = ""
{txt}  6{com}. local unique = ""
{txt}  7{com}. local total = ""
{txt}  8{com}. local class = ""
{txt}  9{com}. 
. local type : type `var' 
{txt} 10{com}. local label : variable label `var' 
{txt} 11{com}. 
. local class = "other"
{txt} 12{com}. 
. // test for string
. capture confirm string variable `var'
{txt} 13{com}. if ( !_rc ) {c -(}
{txt} 14{com}.     // we now it is a string
.     local isstr = "YES"
{txt} 15{com}.     capture tab `var', matcell( freq )
{txt} 16{com}.     if ( !_rc ) {c -(}
{txt} 17{com}.     
.         // not too many obs
.         local total = `r(N)'
{txt} 18{com}.         local unique = r(r)
{txt} 19{com}. 
.         if ( `unique' < `category_cutoff' ) {c -(}
{txt} 20{com}.         forvalues i=1/`unique' {c -(}
{txt} 21{com}.             if ( `i' == 1 ) {c -(}
{txt} 22{com}.                 noi di "@freq " _continue
{txt} 23{com}.             {c )-}
{txt} 24{com}.             noi di freq[`i',1] _continue
{txt} 25{com}.             if ( `i' == `unique' ) {c -(}
{txt} 26{com}.                 noi di ""
{txt} 27{com}.             {c )-}
{txt} 28{com}.             else {c -(}
{txt} 29{com}.                 noi di ", " _continue
{txt} 30{com}.             {c )-}
{txt} 31{com}.         {c )-}
{txt} 32{com}. 
.         levelsof `var', local(levels)
{txt} 33{com}.         local i = 1
{txt} 34{com}.         foreach l of local levels {c -(}
{txt} 35{com}.             if ( `i' == 1 ) {c -(}
{txt} 36{com}.                 noi di "@values " _continue
{txt} 37{com}.             {c )-}
{txt} 38{com}.             noi di `""`l'""' _continue
{txt} 39{com}.             if ( `i' == `unique' ) {c -(}
{txt} 40{com}.                 noi di ""
{txt} 41{com}.             {c )-}
{txt} 42{com}.             else {c -(}
{txt} 43{com}.                 noi di ", " _continue
{txt} 44{com}.             {c )-}
{txt} 45{com}.             local i = `i' + 1
{txt} 46{com}.         {c )-}
{txt} 47{com}.         {c )-}
{txt} 48{com}.         
.         if ( `total' == 0 ) {c -(}
{txt} 49{com}.             local class = "empty"
{txt} 50{com}.         {c )-}
{txt} 51{com}.         else if ( `unique' == 1 ) {c -(}
{txt} 52{com}.             local class = "constant"
{txt} 53{com}.         {c )-}
{txt} 54{com}.         else if ( `unique' == 2 ) {c -(}
{txt} 55{com}.             local class = "dummy"
{txt} 56{com}.         {c )-}
{txt} 57{com}.         else if ( `unique' < `category_cutoff' & `unique' < `total' ) {c -(}
{txt} 58{com}.             local class = "category"
{txt} 59{com}.         {c )-}
{txt} 60{com}.         else if (`unique' == `total') {c -(}
{txt} 61{com}.             local class = "identifier"
{txt} 62{com}.         {c )-} 
{txt} 63{com}.         else {c -(}
{txt} 64{com}.             local class = "string"
{txt} 65{com}.         {c )-}        
{txt} 66{com}.     {c )-}
{txt} 67{com}.     else {c -(}
{txt} 68{com}.         // lots of observations, not sure what to do yet
.         // should get random samples here
.         noi di "@example0 " `var'[1]
{txt} 69{com}.     {c )-}
{txt} 70{com}. {c )-}
{txt} 71{com}. else {c -(}
{txt} 72{com}.     // else assume it is numeric
. 
.     noi inspect `var'
{txt} 73{com}. 
.     local total = r(N)
{txt} 74{com}.     local unique = r(N_unique)
{txt} 75{com}. 
.     if ( `unique' < `category_cutoff' ) {c -(}
{txt} 76{com}.         local cat = "YES"
{txt} 77{com}.     {c )-}
{txt} 78{com}. 
.     if ( "`unique'" != "." ) {c -(}
{txt} 79{com}.         if ( `total' == 0 ) {c -(}
{txt} 80{com}.             local class = "empty"
{txt} 81{com}.         {c )-}
{txt} 82{com}.         else if ( `unique' == 1 ) {c -(}
{txt} 83{com}.             local class = "constant"
{txt} 84{com}.         {c )-}
{txt} 85{com}.         else if ( `unique' == 2 ) {c -(}
{txt} 86{com}.             local class = "dummy"
{txt} 87{com}.         {c )-}
{txt} 88{com}.         else if ( `unique' < `category_cutoff' & `unique' < `total' ) {c -(}
{txt} 89{com}.             capture confirm string variable `var'
{txt} 90{com}.             if ( !_rc ) {c -(}
{txt} 91{com}.                 local class = "other"
{txt} 92{com}.             {c )-} 
{txt} 93{com}.             else {c -(}
{txt} 94{com}.                 local class = "category"
{txt} 95{com}.             {c )-}
{txt} 96{com}.         {c )-}
{txt} 97{com}.         else if (`r(N_unique)' == `r(N)') {c -(}
{txt} 98{com}.             local class = "identifier"
{txt} 99{com}.         {c )-}
{txt}100{com}.     {c )-}
{txt}101{com}. 
. // TODO this takes too long?   sum `var', detail
.     noi sum `var'
{txt}102{com}.     local min = r(min)
{txt}103{com}.     local max = r(max)
{txt}104{com}.     local nobs = r(N)
{txt}105{com}.     
.     // TODO maybe the precision should be handled later (vm?)
.     if ( ( "`type'" != "double" & "`type'" != "float" ) & "`class'" == "constant" ) {c -(}
{txt}106{com}.         noi di "@mean " %9.0f r(mean)
{txt}107{com}.     {c )-} 
{txt}108{com}.     else {c -(}
{txt}109{com}.         noi di "@mean " %9.3f r(mean)
{txt}110{com}.     {c )-}
{txt}111{com}.     noi di "@sd " %9.3f `r(sd)'
{txt}112{com}.     // noi di "@skewness " %9.3f `r(skewness)'
.     // noi di "@kurtosis " %9.3f `r(kurtosis)'
.     
.     if ( "`type'" == "double" | "`type'" == "float" ) {c -(}
{txt}113{com}.       noi di "@min " %9.3f `r(min)'
{txt}114{com}.       noi di "@max " %9.3f `r(max)'
{txt}115{com}.       // noi di "@p50 " %9.3f `r(p50)'
.     {c )-} 
{txt}116{com}.     else {c -(}
{txt}117{com}.       noi di "@min " %9.0f `r(min)'
{txt}118{com}.       noi di "@max " %9.0f `r(max)'
{txt}119{com}.       // noi di "@p50 " %9.0f `r(p50)'
.     {c )-}
{txt}120{com}. {c )-}
{txt}121{com}. 
. 
. if ( ( "`class'" == "constant" ) & ( "`isstr'"!= "YES" ) ) {c -(}
{txt}122{com}.     noi di "@values " `var'[1]
{txt}123{com}. {c )-}
{txt}124{com}. else if ( "`class'" == "category" | "`class'" == "dummy" ) {c -(}
{txt}125{com}.     cap noi {c -(}
{txt}126{com}.         if ( "`isstr'" != "YES" ) {c -(}
{txt}127{com}.             cap tab `var', matcell( freq ) matrow( name )
{txt}128{com}.             if ( _rc != 0 | ("`r(r)'" != "`unique'") ) {c -(}
{txt}129{com}.                 local class = "other"
{txt}130{com}.                 local unique = r(r)
{txt}131{com}.             {c )-}
{txt}132{com}.             else {c -(}
{txt}133{com}.                 forvalues i=1/`unique' {c -(}
{txt}134{com}.                     if ( `i' == 1 ) {c -(}
{txt}135{com}.                         noi di "@values " _continue
{txt}136{com}.                     {c )-}
{txt}137{com}.                     noi di name[`i',1] _continue
{txt}138{com}.                     if ( `i' == `unique' ) {c -(}
{txt}139{com}.                         noi di ""
{txt}140{com}.                     {c )-}
{txt}141{com}.                     else {c -(}
{txt}142{com}.                         noi di ", " _continue
{txt}143{com}.                     {c )-}
{txt}144{com}.                 {c )-}
{txt}145{com}.                 forvalues i=1/`unique' {c -(}
{txt}146{com}.                     if ( `i' == 1 ) {c -(}
{txt}147{com}.                         noi di "@names " _continue
{txt}148{com}.                     {c )-}
{txt}149{com}.                     local val = name[`i',1]
{txt}150{com}.                     local lab :label (`var') `val'
{txt}151{com}.                     noi di `""`lab'""' _continue
{txt}152{com}.                     if ( `i' == `unique' ) {c -(}
{txt}153{com}.                         noi di ""
{txt}154{com}.                     {c )-}
{txt}155{com}.                     else {c -(}
{txt}156{com}.                         noi di ", " _continue
{txt}157{com}.                     {c )-}
{txt}158{com}.                 {c )-}
{txt}159{com}.                 forvalues i=1/`unique' {c -(}
{txt}160{com}.                     if ( `i' == 1 ) {c -(}
{txt}161{com}.                         noi di "@freq " _continue
{txt}162{com}.                     {c )-}
{txt}163{com}.                     noi di freq[`i',1] _continue
{txt}164{com}.                     if ( `i' == `unique' ) {c -(}
{txt}165{com}.                         noi di ""
{txt}166{com}.                     {c )-}
{txt}167{com}.                     else {c -(}
{txt}168{com}.                         noi di ", " _continue
{txt}169{com}.                     {c )-}
{txt}170{com}.                 {c )-}
{txt}171{com}.             {c )-}
{txt}172{com}.         {c )-}
{txt}173{com}.     {c )-}
{txt}174{com}. {c )-}
{txt}175{com}. else {c -(}
{txt}176{com}.     noi di "@example0 " `var'[1]
{txt}177{com}. {c )-}
{txt}178{com}. 
. // histogram
. if ( "`isstr'" != "YES" & ("`class'" == "other" | "`class'" == "identifier") ) {c -(}
{txt}179{com}. cap noi {c -(}
{txt}180{com}.     tempvar h w
{txt}181{com}.     twoway__histogram_gen `var', gen( `h' `w' )
{txt}182{com}.     forvalues i=1/`=r(n_x)' {c -(}
{txt}183{com}.         if ( `i' == 1 ) {c -(}
{txt}184{com}.             noi di "@histh " _continue
{txt}185{com}.         {c )-}
{txt}186{com}.         noi di `h'[`i'] _continue
{txt}187{com}.         if ( `i' == `=r(n_x)' ) {c -(}
{txt}188{com}.             noi di ""
{txt}189{com}.         {c )-}
{txt}190{com}.         else {c -(}
{txt}191{com}.             noi di ", " _continue
{txt}192{com}.         {c )-}
{txt}193{com}.     {c )-}
{txt}194{com}.     forvalues i=1/`=r(n_x)' {c -(}
{txt}195{com}.         if ( `i' == 1 ) {c -(}
{txt}196{com}.             noi di "@histw " _continue
{txt}197{com}.         {c )-}
{txt}198{com}.         noi di `w'[`i'] _continue
{txt}199{com}.         if ( `i' == `=r(n_x)' ) {c -(}
{txt}200{com}.             noi di ""
{txt}201{com}.         {c )-}
{txt}202{com}.         else {c -(}
{txt}203{com}.             noi di ", " _continue
{txt}204{com}.         {c )-}
{txt}205{com}.     {c )-}
{txt}206{com}.     {c )-}
{txt}207{com}. {c )-}
{txt}208{com}. 
. noi di "@type `type'"
{txt}209{com}. noi di "@label `label'"
{txt}210{com}. noi di "@class `class'"
{txt}211{com}. noi di "@N_unique `unique'"
{txt}212{com}. noi di "@N `total'"
{txt}213{com}. 
. noi di as res " "
{txt}214{com}. noi di "_@NOTES"
{txt}215{com}. 
. noi notes `var'
{txt}216{com}. 
. noi di as res " "
{txt}217{com}. {c )-}
{txt}218{com}. 
. 
. {c )-}
=====p25=====

{res}p25:  r(p25)                                    {txt}Number of Observations
{hline 12}                                {hline 30}
                                            Total   Integers   Nonintegers
{c |}          {res}#                 {txt}Negative       {res} 1000         -       1000
{txt}{c |}          {res}#                 {txt}Zero               {res}-         -          -
{txt}{c |}      {res}#   #                 {txt}Positive           {res}-         -          -
{txt}{c |}      {res}#   #                                {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #                 {txt}Total          {res} 1000         -       1000
{txt}{c |}  {res}.   #   #   #   .         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}-.9533168     -.3055624                      1000
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 9}p25 {c |}{res}      1000   -.6727567    .0944072  -.9533168  -.3055624
@mean    -0.673
@sd     0.094
@min    -0.953
@max    -0.306
@example0 -.7308923
@histh .08954012, .22385028, .26862034, .53724068, .85063106, 1.0744814, 1.2983316, 1.9251125, 2.1937327, 3.178674, 4.4322357, 3.7606847, 3.7606847, 4.4322357, 3.8054547, 3.5368345, 3.133904, 1.9698825, 1.2983316, 1.3431017, .94017118, .4029305, .13431017, .13431017, .04477006
@histw -.94214863, -.91981226, -.8974759, -.87513953, -.85280317, -.83046687, -.8081305, -.78579414, -.76345778, -.74112141, -.71878505, -.69644868, -.67411232, -.65177596, -.62943959, -.60710329, -.58476692, -.56243056, -.5400942, -.51775783, -.49542147, -.47308511, -.45074877, -.42841241, -.31673062
@type float
@label r(p25)
@class other
@N_unique .
@N 1000
 
_@NOTES
 
=====p50=====

p50:  r(p50)                                    {txt}Number of Observations
{hline 12}                                {hline 30}
                                            Total   Integers   Nonintegers
{c |}          {res}#                 {txt}Negative       {res}  505         -        505
{txt}{c |}          {res}#                 {txt}Zero               {res}-         -          -
{txt}{c |}          {res}#                 {txt}Positive       {res}  495         -        495
{txt}{c |}      {res}#   #                                {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #   #             {txt}Total          {res} 1000         -       1000
{txt}{c |}  {res}.   #   #   #   .         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}-.2731787      .3048038                      1000
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 9}p50 {c |}{res}      1000    -.001541    .0884508  -.2731787   .3048038
@mean    -0.002
@sd     0.088
@min    -0.273
@max     0.305
@example0 -.05925553
@histh .20069811, .10034905, .20069811, .55191982, .60209435, .80279243, .80279243, 1.8564576, 2.3080282, 2.5087264, 3.5623915, 3.9136131, 4.4655328, 4.5658822, 4.4153585, 4.2146602, 4.064137, 2.5087264, 2.7094245, 2.2076793, 1.3547122, .85296696, .9031415, .25087264, .20069811, .05017453
@histw -.26321349, -.24328305, -.22335261, -.20342219, -.18349175, -.16356133, -.14363089, -.12370046, -.10377003, -.0838396, -.06390917, -.04397873, -.0240483, -.00411787, .01581256, .03574299, .05567342, .07560386, .09553429, .11546472, .13539515, .15532558, .17525601, .19518645, .21511687, .29483861
@type float
@label r(p50)
@class other
@N_unique .
@N 1000
 
_@NOTES
 
=====p75=====

p75:  r(p75)                                    {txt}Number of Observations
{hline 12}                                {hline 30}
                                            Total   Integers   Nonintegers
{c |}          {res}#                 {txt}Negative           {res}-         -          -
{txt}{c |}          {res}#                 {txt}Zero               {res}-         -          -
{txt}{c |}          {res}#                 {txt}Positive       {res} 1000         -       1000
{txt}{c |}          {res}#                                {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #   #             {txt}Total          {res} 1000         -       1000
{txt}{c |}  {res}.   #   #   #   .         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}.3836729       .9612866                      1000
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 9}p75 {c |}{res}      1000    .6694791    .0912676   .3836729   .9612866
@mean     0.669
@sd     0.091
@min     0.384
@max     0.961
@example0 .62458688
@histh .05020657, .1506197, .35144597, .50206566, .75309849, 1.0041313, 1.4559904, 2.0584693, 2.4099152, 2.5103283, 3.5144596, 4.3679714, 3.8156991, 5.1210699, 4.5185909, 4.4683843, 3.2634268, 2.5103283, 1.6568167, 1.6568167, 1.6066102, .85351163, .6024788, .25103283, .35144597, .20082627, .05020657, .1506197
@histw .39363179, .43346721, .45338491, .47330263, .49322036, .51313806, .53305578, .55297351, .57289118, .5928089, .61272663, .63264436, .65256202, .67247975, .69239748, .7123152, .73223293, .7521506, .77206832, .79198605, .81190377, .83182144, .85173917, .87165689, .89157462, .91149235, .93141001, .95132774
@type float
@label r(p75)
@class other
@N_unique .
@N 1000
 
_@NOTES
 
{com}. 
. // noi profiler report
. // profiler off
. {c )-}
{txt}
{com}. 
. exit, clear STATA
