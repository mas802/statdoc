{smcl}
{txt}{sf}{ul off}
{com}. /** 
>  * A do file to run the standard stats for a whole data set. 
>  *
>  * Note that you must delete the files in the derived directory
>  * for changes to be reflected in the output.
>  *
>  * @version 0.1
> */
. 
. // profiler on
. 
. use  "/usr/local/stata/ado/base/s/sp500.dta"
{txt}(S&P 500)

{com}. 
. describe, short

{txt}Contains data from {res}/usr/local/stata/ado/base/s/sp500.dta
{txt}  obs:{res}           248                          S&P 500
{txt} vars:{res}             7                          22 Apr 2011 10:52
{txt} size:{res}         7,440                          
{txt}Sorted by:  {res}date
{txt}
{com}. 
. local N = r(N)
{txt}
{com}. local variables = r(k)
{txt}
{com}. 
. di "@N `N'"
{res}@N 248
{txt}
{com}. di "@variables `variables'"
{res}@variables 7
{txt}
{com}. 
. datasignature
  {res}248:7(84589):1937469890:4025189766
{txt}
{com}. local datasig = "`r(datasignature)'"
{txt}
{com}. 
. di "@datasignature `datasig'"
{res}@datasignature 248:7(84589):1937469890:4025189766
{txt}
{com}. 
. cap noi xtset
{err}panel variable not set; use {bf:xtset} {it:varname} ...
{txt}
{com}. if ( !_rc ) {c -(}
.     di "@timevar `r(timevar)'"
.     di "@panelvar `r(panelvar)'"
. {c )-}
{txt}
{com}. 
. notes _dta
{res}
_dta:
{txt}{p 2 6}
1.
S&P 500 Historical Data
{p_end}
{p 2 6}
2.
Source: Yahoo!Finance, Yahoo! Inc., and Commodity Systems, Inc.
{p_end}

{com}. 
. qui {c -(}
{txt}
{com}. 
. foreach var of varlist * {c -(}
{txt}  2{com}. 
. di "=====`var'====="
{txt}  3{com}. qui {c -(}
{txt}  4{com}. local category_cutoff = 30
{txt}  5{com}. 
. // this takes very long on large datasets (and does mostly the same as other things below)
. // codebook `var'
. 
. local isstr = ""
{txt}  6{com}. local unique = ""
{txt}  7{com}. local total = ""
{txt}  8{com}. local class = ""
{txt}  9{com}. 
. local type : type `var' 
{txt} 10{com}. local label : variable label `var' 
{txt} 11{com}. 
. local class = "other"
{txt} 12{com}. 
. // test for string
. capture confirm string variable `var'
{txt} 13{com}. if ( !_rc ) {c -(}
{txt} 14{com}.     // we now it is a string
.     local isstr = "YES"
{txt} 15{com}.     capture tab `var', matcell( freq )
{txt} 16{com}.     if ( !_rc ) {c -(}
{txt} 17{com}.     
.         // not too many obs
.         local total = `r(N)'
{txt} 18{com}.         local unique = r(r)
{txt} 19{com}. 
.         if ( `unique' < `category_cutoff' ) {c -(}
{txt} 20{com}.         forvalues i=1/`unique' {c -(}
{txt} 21{com}.             if ( `i' == 1 ) {c -(}
{txt} 22{com}.                 noi di "@freq " _continue
{txt} 23{com}.             {c )-}
{txt} 24{com}.             noi di freq[`i',1] _continue
{txt} 25{com}.             if ( `i' == `unique' ) {c -(}
{txt} 26{com}.                 noi di ""
{txt} 27{com}.             {c )-}
{txt} 28{com}.             else {c -(}
{txt} 29{com}.                 noi di ", " _continue
{txt} 30{com}.             {c )-}
{txt} 31{com}.         {c )-}
{txt} 32{com}. 
.         levelsof `var', local(levels)
{txt} 33{com}.         local i = 1
{txt} 34{com}.         foreach l of local levels {c -(}
{txt} 35{com}.             if ( `i' == 1 ) {c -(}
{txt} 36{com}.                 noi di "@values " _continue
{txt} 37{com}.             {c )-}
{txt} 38{com}.             noi di `""`l'""' _continue
{txt} 39{com}.             if ( `i' == `unique' ) {c -(}
{txt} 40{com}.                 noi di ""
{txt} 41{com}.             {c )-}
{txt} 42{com}.             else {c -(}
{txt} 43{com}.                 noi di ", " _continue
{txt} 44{com}.             {c )-}
{txt} 45{com}.             local i = `i' + 1
{txt} 46{com}.         {c )-}
{txt} 47{com}.         {c )-}
{txt} 48{com}.         
.         if ( `total' == 0 ) {c -(}
{txt} 49{com}.             local class = "empty"
{txt} 50{com}.         {c )-}
{txt} 51{com}.         else if ( `unique' == 1 ) {c -(}
{txt} 52{com}.             local class = "constant"
{txt} 53{com}.         {c )-}
{txt} 54{com}.         else if ( `unique' == 2 ) {c -(}
{txt} 55{com}.             local class = "dummy"
{txt} 56{com}.         {c )-}
{txt} 57{com}.         else if ( `unique' < `category_cutoff' & `unique' < `total' ) {c -(}
{txt} 58{com}.             local class = "category"
{txt} 59{com}.         {c )-}
{txt} 60{com}.         else if (`unique' == `total') {c -(}
{txt} 61{com}.             local class = "identifier"
{txt} 62{com}.         {c )-} 
{txt} 63{com}.         else {c -(}
{txt} 64{com}.             local class = "string"
{txt} 65{com}.         {c )-}        
{txt} 66{com}.     {c )-}
{txt} 67{com}.     else {c -(}
{txt} 68{com}.         // lots of observations, not sure what to do yet
.         // should get random samples here
.         noi di "@example0 " `var'[1]
{txt} 69{com}.     {c )-}
{txt} 70{com}. {c )-}
{txt} 71{com}. else {c -(}
{txt} 72{com}.     // else assume it is numeric
. 
.     noi inspect `var'
{txt} 73{com}. 
.     local total = r(N)
{txt} 74{com}.     local unique = r(N_unique)
{txt} 75{com}. 
.     if ( `unique' < `category_cutoff' ) {c -(}
{txt} 76{com}.         local cat = "YES"
{txt} 77{com}.     {c )-}
{txt} 78{com}. 
.     if ( "`unique'" != "." ) {c -(}
{txt} 79{com}.         if ( `total' == 0 ) {c -(}
{txt} 80{com}.             local class = "empty"
{txt} 81{com}.         {c )-}
{txt} 82{com}.         else if ( `unique' == 1 ) {c -(}
{txt} 83{com}.             local class = "constant"
{txt} 84{com}.         {c )-}
{txt} 85{com}.         else if ( `unique' == 2 ) {c -(}
{txt} 86{com}.             local class = "dummy"
{txt} 87{com}.         {c )-}
{txt} 88{com}.         else if ( `unique' < `category_cutoff' & `unique' < `total' ) {c -(}
{txt} 89{com}.             capture confirm string variable `var'
{txt} 90{com}.             if ( !_rc ) {c -(}
{txt} 91{com}.                 local class = "other"
{txt} 92{com}.             {c )-} 
{txt} 93{com}.             else {c -(}
{txt} 94{com}.                 local class = "category"
{txt} 95{com}.             {c )-}
{txt} 96{com}.         {c )-}
{txt} 97{com}.         else if (`r(N_unique)' == `r(N)') {c -(}
{txt} 98{com}.             local class = "identifier"
{txt} 99{com}.         {c )-}
{txt}100{com}.     {c )-}
{txt}101{com}. 
. // TODO this takes too long?   sum `var', detail
.     noi sum `var'
{txt}102{com}.     local min = r(min)
{txt}103{com}.     local max = r(max)
{txt}104{com}.     local nobs = r(N)
{txt}105{com}.     
.     // TODO maybe the precision should be handled later (vm?)
.     if ( ( "`type'" != "double" & "`type'" != "float" ) & "`class'" == "constant" ) {c -(}
{txt}106{com}.         noi di "@mean " %9.0f r(mean)
{txt}107{com}.     {c )-} 
{txt}108{com}.     else {c -(}
{txt}109{com}.         noi di "@mean " %9.3f r(mean)
{txt}110{com}.     {c )-}
{txt}111{com}.     noi di "@sd " %9.3f `r(sd)'
{txt}112{com}.     // noi di "@skewness " %9.3f `r(skewness)'
.     // noi di "@kurtosis " %9.3f `r(kurtosis)'
.     
.     if ( "`type'" == "double" | "`type'" == "float" ) {c -(}
{txt}113{com}.       noi di "@min " %9.3f `r(min)'
{txt}114{com}.       noi di "@max " %9.3f `r(max)'
{txt}115{com}.       // noi di "@p50 " %9.3f `r(p50)'
.     {c )-} 
{txt}116{com}.     else {c -(}
{txt}117{com}.       noi di "@min " %9.0f `r(min)'
{txt}118{com}.       noi di "@max " %9.0f `r(max)'
{txt}119{com}.       // noi di "@p50 " %9.0f `r(p50)'
.     {c )-}
{txt}120{com}. {c )-}
{txt}121{com}. 
. 
. if ( ( "`class'" == "constant" ) & ( "`isstr'"!= "YES" ) ) {c -(}
{txt}122{com}.     noi di "@values " `var'[1]
{txt}123{com}. {c )-}
{txt}124{com}. else if ( "`class'" == "category" | "`class'" == "dummy" ) {c -(}
{txt}125{com}.     cap noi {c -(}
{txt}126{com}.         if ( "`isstr'" != "YES" ) {c -(}
{txt}127{com}.             cap tab `var', matcell( freq ) matrow( name )
{txt}128{com}.             if ( _rc != 0 | ("`r(r)'" != "`unique'") ) {c -(}
{txt}129{com}.                 local class = "other"
{txt}130{com}.                 local unique = r(r)
{txt}131{com}.             {c )-}
{txt}132{com}.             else {c -(}
{txt}133{com}.                 forvalues i=1/`unique' {c -(}
{txt}134{com}.                     if ( `i' == 1 ) {c -(}
{txt}135{com}.                         noi di "@values " _continue
{txt}136{com}.                     {c )-}
{txt}137{com}.                     noi di name[`i',1] _continue
{txt}138{com}.                     if ( `i' == `unique' ) {c -(}
{txt}139{com}.                         noi di ""
{txt}140{com}.                     {c )-}
{txt}141{com}.                     else {c -(}
{txt}142{com}.                         noi di ", " _continue
{txt}143{com}.                     {c )-}
{txt}144{com}.                 {c )-}
{txt}145{com}.                 forvalues i=1/`unique' {c -(}
{txt}146{com}.                     if ( `i' == 1 ) {c -(}
{txt}147{com}.                         noi di "@names " _continue
{txt}148{com}.                     {c )-}
{txt}149{com}.                     local val = name[`i',1]
{txt}150{com}.                     local lab :label (`var') `val'
{txt}151{com}.                     noi di `""`lab'""' _continue
{txt}152{com}.                     if ( `i' == `unique' ) {c -(}
{txt}153{com}.                         noi di ""
{txt}154{com}.                     {c )-}
{txt}155{com}.                     else {c -(}
{txt}156{com}.                         noi di ", " _continue
{txt}157{com}.                     {c )-}
{txt}158{com}.                 {c )-}
{txt}159{com}.                 forvalues i=1/`unique' {c -(}
{txt}160{com}.                     if ( `i' == 1 ) {c -(}
{txt}161{com}.                         noi di "@freq " _continue
{txt}162{com}.                     {c )-}
{txt}163{com}.                     noi di freq[`i',1] _continue
{txt}164{com}.                     if ( `i' == `unique' ) {c -(}
{txt}165{com}.                         noi di ""
{txt}166{com}.                     {c )-}
{txt}167{com}.                     else {c -(}
{txt}168{com}.                         noi di ", " _continue
{txt}169{com}.                     {c )-}
{txt}170{com}.                 {c )-}
{txt}171{com}.             {c )-}
{txt}172{com}.         {c )-}
{txt}173{com}.     {c )-}
{txt}174{com}. {c )-}
{txt}175{com}. else {c -(}
{txt}176{com}.     noi di "@example0 " `var'[1]
{txt}177{com}. {c )-}
{txt}178{com}. 
. // histogram
. if ( "`isstr'" != "YES" & ("`class'" == "other" | "`class'" == "identifier") ) {c -(}
{txt}179{com}. cap noi {c -(}
{txt}180{com}.     tempvar h w
{txt}181{com}.     twoway__histogram_gen `var', gen( `h' `w' )
{txt}182{com}.     forvalues i=1/`=r(n_x)' {c -(}
{txt}183{com}.         if ( `i' == 1 ) {c -(}
{txt}184{com}.             noi di "@histh " _continue
{txt}185{com}.         {c )-}
{txt}186{com}.         noi di `h'[`i'] _continue
{txt}187{com}.         if ( `i' == `=r(n_x)' ) {c -(}
{txt}188{com}.             noi di ""
{txt}189{com}.         {c )-}
{txt}190{com}.         else {c -(}
{txt}191{com}.             noi di ", " _continue
{txt}192{com}.         {c )-}
{txt}193{com}.     {c )-}
{txt}194{com}.     forvalues i=1/`=r(n_x)' {c -(}
{txt}195{com}.         if ( `i' == 1 ) {c -(}
{txt}196{com}.             noi di "@histw " _continue
{txt}197{com}.         {c )-}
{txt}198{com}.         noi di `w'[`i'] _continue
{txt}199{com}.         if ( `i' == `=r(n_x)' ) {c -(}
{txt}200{com}.             noi di ""
{txt}201{com}.         {c )-}
{txt}202{com}.         else {c -(}
{txt}203{com}.             noi di ", " _continue
{txt}204{com}.         {c )-}
{txt}205{com}.     {c )-}
{txt}206{com}.     {c )-}
{txt}207{com}. {c )-}
{txt}208{com}. 
. noi di "@type `type'"
{txt}209{com}. noi di "@label `label'"
{txt}210{com}. noi di "@class `class'"
{txt}211{com}. noi di "@N_unique `unique'"
{txt}212{com}. noi di "@N `total'"
{txt}213{com}. 
. noi di as res " "
{txt}214{com}. noi di "_@NOTES"
{txt}215{com}. 
. noi notes `var'
{txt}216{com}. 
. noi di as res " "
{txt}217{com}. {c )-}
{txt}218{com}. 
. 
. {c )-}
=====date=====

{res}date:  Date                                     {txt}Number of Observations
{hline 11}                                 {hline 30}
                                            Total   Integers   Nonintegers
{c |}  {res}#                         {txt}Negative           {res}-         -          -
{txt}{c |}  {res}#   #   #   #   #         {txt}Zero               {res}-         -          -
{txt}{c |}  {res}#   #   #   #   #         {txt}Positive       {res}  248       248          -
{txt}{c |}  {res}#   #   #   #   #                        {txt}{hline 5}     {hline 5}      {hline 5}
{c |}  {res}#   #   #   #   #         {txt}Total          {res}  248       248          -
{txt}{c |}  {res}#   #   #   #   #         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}14977             15340                       248
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}date {c |}{res}       248    15156.85    105.3335      14977      15340
@mean 15156.855
@sd   105.333
@min     14977
@max     15340
@example0 14977
@histh .0029992, .00249933, .0029992, .00266596, .00283258, .00283258, .00283258, .00266596, .00283258, .0029992, .00199947, .0029992, .00266596, .00283258, .00266596
@histw 14989.1, 15013.3, 15037.5, 15061.7, 15085.9, 15110.1, 15134.3, 15158.5, 15182.7, 15206.9, 15231.1, 15255.3, 15279.5, 15303.7, 15327.9
@type int
@label Date
@class other
@N_unique .
@N 248
 
_@NOTES
 
=====open=====

open:  Opening price                            {txt}Number of Observations
{hline 20}                        {hline 30}
                                            Total   Integers   Nonintegers
{c |}          {res}#                 {txt}Negative           {res}-         -          -
{txt}{c |}          {res}#   #             {txt}Zero               {res}-         -          -
{txt}{c |}          {res}#   #             {txt}Positive       {res}  248         -        248
{txt}{c |}          {res}#   #                            {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #   #   #         {txt}Total          {res}  248         -        248
{txt}{c |}  {res}.   #   #   #   #         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}965.8           1373.73                       248
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}open {c |}{res}       248    1194.884    87.12808      965.8    1373.73
@mean  1194.884
@sd    87.128
@min   965.800
@max  1373.730
@example0 1320.28
@histh .00029654, .00074135, .00059308, .0014827, .00222405, .00237232, .005486, .0040033, .00341022, .0040033, .00415157, .00266886, .00177924, .00163097, .00192751
@histw 979.39764, 1006.593, 1033.7883, 1060.9836, 1088.179, 1115.3743, 1142.5697, 1169.765, 1196.9603, 1224.1556, 1251.351, 1278.5463, 1305.7417, 1332.937, 1360.1323
@type float
@label Opening price
@class other
@N_unique .
@N 248
 
_@NOTES
 
=====high=====

high:  High price                               {txt}Number of Observations
{hline 17}                           {hline 30}
                                            Total   Integers   Nonintegers
{c |}          {res}#                 {txt}Negative           {res}-         -          -
{txt}{c |}          {res}#                 {txt}Zero               {res}-         -          -
{txt}{c |}          {res}#   #             {txt}Positive       {res}  248         2        246
{txt}{c |}      {res}#   #   #                            {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #   #   #         {txt}Total          {res}  248         2        246
{txt}{c |}  {res}.   #   #   #   #         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}984.54          1383.37                       248
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}high {c |}{res}       248    1204.044    86.53465     984.54    1383.37
@mean  1204.044
@sd    86.535
@min   984.540
@max  1383.370
@example0 1320.28
@histh .00030331, .00060661, .00090992, .00197149, .00197149, .00318472, .00530786, .00409464, .00394298, .00333637, .00470125, .00181984, .00151653, .00242645, .00151653
@histw 997.83429, 1024.423, 1051.0116, 1077.6003, 1104.189, 1130.7777, 1157.3663, 1183.955, 1210.5437, 1237.1323, 1263.7209, 1290.3097, 1316.8983, 1343.4869, 1370.0757
@type float
@label High price
@class other
@N_unique .
@N 248
 
_@NOTES
 
=====low=====

low:  Low price                                 {txt}Number of Observations
{hline 15}                             {hline 30}
                                            Total   Integers   Nonintegers
{c |}          {res}#                 {txt}Negative           {res}-         -          -
{txt}{c |}          {res}#   #             {txt}Zero               {res}-         -          -
{txt}{c |}          {res}#   #             {txt}Positive       {res}  248         2        246
{txt}{c |}          {res}#   #                            {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #   #   #         {txt}Total          {res}  248         2        246
{txt}{c |}  {res}.   #   #   #   #         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}944.75          1364.66                       248
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 9}low {c |}{res}       248    1183.334    87.47576     944.75    1364.66
@mean  1183.334
@sd    87.476
@min   944.750
@max  1364.660
@example0 1276.05
@histh .00028808, .00057616, .00043212, .00129636, .00259272, .0014404, .00518544, .00475332, .00302484, .00446524, .00388908, .00259272, .00158444, .00187252, .00172848
@histw 958.74701, 986.74103, 1014.735, 1042.729, 1070.723, 1098.717, 1126.7111, 1154.7051, 1182.699, 1210.693, 1238.687, 1266.681, 1294.675, 1322.6691, 1350.6631
@type float
@label Low price
@class other
@N_unique .
@N 248
 
_@NOTES
 
=====close=====

close:  Closing price                           {txt}Number of Observations
{hline 21}                       {hline 30}
                                            Total   Integers   Nonintegers
{c |}          {res}#                 {txt}Negative           {res}-         -          -
{txt}{c |}          {res}#                 {txt}Zero               {res}-         -          -
{txt}{c |}          {res}#   #             {txt}Positive       {res}  248         -        248
{txt}{c |}          {res}#   #                            {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #   #   #         {txt}Total          {res}  248         -        248
{txt}{c |}  {res}.   #   #   #   #         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}965.8           1373.73                       248
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 7}close {c |}{res}       248    1194.179    86.79468      965.8    1373.73
@mean  1194.179
@sd    86.795
@min   965.800
@max  1373.730
@example0 1283.27
@histh .00029654, .00074135, .00059308, .0014827, .00222405, .00237232, .00563427, .0040033, .00341022, .0040033, .00429984, .00252059, .00177924, .0014827, .00192751
@histw 979.39764, 1006.593, 1033.7883, 1060.9836, 1088.179, 1115.3743, 1142.5697, 1169.765, 1196.9603, 1224.1556, 1251.351, 1278.5463, 1305.7417, 1332.937, 1360.1323
@type float
@label Closing price
@class other
@N_unique .
@N 248
 
_@NOTES
 
=====volume=====

volume:  Volume (thousands)                     {txt}Number of Observations
{hline 27}                 {hline 30}
                                            Total   Integers   Nonintegers
{c |}          {res}#                 {txt}Negative           {res}-         -          -
{txt}{c |}      {res}#   #                 {txt}Zero               {res}-         -          -
{txt}{c |}      {res}#   #                 {txt}Positive       {res}  248       236         12
{txt}{c |}      {res}#   #                                {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #                 {txt}Total          {res}  248       236         12
{txt}{c |}  {res}.   #   #   .   .         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}4103            23308.3                       248
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 6}volume {c |}{res}       248    12320.68    2585.929       4103    23308.3
@mean 12320.677
@sd  2585.929
@min  4103.000
@max 23308.300
@example0 11294
@histh 6.299e-06, 3.149e-06, 6.299e-06, .00004409, .00009448, .00019526, .00016377, .00016062, .00004724, .0000189, .00001575, 9.448e-06, 3.149e-06, 6.299e-06, 6.299e-06
@histw 4743.1768, 6023.5298, 7303.8833, 8584.2363, 9864.5898, 11144.943, 12425.297, 13705.65, 14986.003, 16266.356, 17546.711, 18827.063, 20107.416, 21387.77, 22668.123
@type double
@label Volume (thousands)
@class other
@N_unique .
@N 248
 
_@NOTES
 
=====change=====

change:  Closing price change                   {txt}Number of Observations
{hline 29}               {hline 30}
                                            Total   Integers   Nonintegers
{c |}          {res}#                 {txt}Negative       {res}  128         3        125
{txt}{c |}          {res}#                 {txt}Zero               {res}-         -          -
{txt}{c |}          {res}#                 {txt}Positive       {res}  119         -        119
{txt}{c |}      {res}#   #                                {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #                 {txt}Total          {res}  247         3        244
{txt}{c |}  {res}.   #   #   #   .         {txt}Missing        {res}    1
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}-53.77002      64.29004                       248
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 6}change {c |}{res}       247   -.5473282    15.84464  -53.77002   64.29004
@mean    -0.547
@sd    15.845
@min   -53.770
@max    64.290
@example0 .
@histh .00102878, .00051439, .00205755, .00565827, .01388849, .01697482, .02983454, .02674821, .01646043, .00925899, .00205755, .00102878, .00102878, .00051439
@histw -49.834682, -41.964012, -34.093342, -26.222673, -18.352001, -10.481332, -2.6106608, 5.2600098, 13.13068, 21.00135, 28.872021, 36.742691, 44.613361, 60.354702
@type float
@label Closing price change
@class other
@N_unique .
@N 247
 
_@NOTES
 
{txt}
{com}. 
. // noi profiler report
. // profiler off
. 
. exit, clear STATA
