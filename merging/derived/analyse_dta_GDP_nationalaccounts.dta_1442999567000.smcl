{smcl}
{txt}{sf}{ul off}

{com}. /** 
>  * A do file to run the standard stats for a whole data set. 
>  *
>  * Note that you must delete the files in the derived directory
>  * for changes to be reflected in the output.
>  *
>  * @version 0.1
> */
. 
. // profiler on
. 
. cap noi {c -(}
. 
. use  "/Users/mas/Dropbox/National_Pride_Large_Data/Data/EVC_data/OECD data/GDP data/GDP/GDP_nationalaccounts.dta"
. 
. describe, short

{txt}Contains data from {res}/Users/mas/Dropbox/National_Pride_Large_Data/Data/EVC_data/OECD data/GDP data/GDP/GDP_nationalaccounts.dta
{txt}  obs:{res}        39,618                          
{txt} vars:{res}             7                          23 Sep 2015 19:12
{txt} size:{res}     9,389,466                          
{txt}Sorted by:  
{com}. 
. local N = r(N)
. local variables = r(k)
. 
. di "@N `N'"
{res}@N 39618
{com}. di "@variables `variables'"
{res}@variables 7
{com}. 
. datasignature
  {res}39618:7(50293):627049287:1148656757
{com}. local datasig = "`r(datasignature)'"
. 
. di "@datasignature `datasig'"
{res}@datasignature 39618:7(50293):627049287:1148656757
{com}. 
. cap noi xtset
{err}panel variable not set; use {bf:xtset} {it:varname} ...
{com}. if ( !_rc ) {c -(}
.     di "@timevar `r(timevar)'"
.     di "@panelvar `r(panelvar)'"
. {c )-}
. 
. notes _dta
{res}{com}. 
. qui {c -(}
. 
. foreach var of varlist * {c -(}
{txt}  2{com}. 
. di "=====`var'====="
{txt}  3{com}. qui {c -(}
{txt}  4{com}. local category_cutoff = 30
{txt}  5{com}. 
. // this takes very long on large datasets (and does mostly the same as other things below)
. // codebook `var'
. 
. local isstr = ""
{txt}  6{com}. local unique = ""
{txt}  7{com}. local total = ""
{txt}  8{com}. local class = ""
{txt}  9{com}. 
. local type : type `var' 
{txt} 10{com}. local label : variable label `var' 
{txt} 11{com}. 
. local class = "other"
{txt} 12{com}. 
. // test for string
. capture confirm string variable `var'
{txt} 13{com}. if ( !_rc ) {c -(}
{txt} 14{com}.     // we now it is a string
.     local isstr = "YES"
{txt} 15{com}.     capture tab `var', matcell( freq )
{txt} 16{com}.     if ( !_rc ) {c -(}
{txt} 17{com}.     
.         // not too many obs
.         local total = `r(N)'
{txt} 18{com}.         local unique = r(r)
{txt} 19{com}. 
.         if ( `unique' < `category_cutoff' ) {c -(}
{txt} 20{com}.         forvalues i=1/`unique' {c -(}
{txt} 21{com}.             if ( `i' == 1 ) {c -(}
{txt} 22{com}.                 noi di "@freq " _continue
{txt} 23{com}.             {c )-}
{txt} 24{com}.             noi di freq[`i',1] _continue
{txt} 25{com}.             if ( `i' == `unique' ) {c -(}
{txt} 26{com}.                 noi di ""
{txt} 27{com}.             {c )-}
{txt} 28{com}.             else {c -(}
{txt} 29{com}.                 noi di ", " _continue
{txt} 30{com}.             {c )-}
{txt} 31{com}.         {c )-}
{txt} 32{com}. 
.         levelsof `var', local(levels)
{txt} 33{com}.         local i = 1
{txt} 34{com}.         foreach l of local levels {c -(}
{txt} 35{com}.             if ( `i' == 1 ) {c -(}
{txt} 36{com}.                 noi di "@values " _continue
{txt} 37{com}.             {c )-}
{txt} 38{com}.             noi di `""`l'""' _continue
{txt} 39{com}.             if ( `i' == `unique' ) {c -(}
{txt} 40{com}.                 noi di ""
{txt} 41{com}.             {c )-}
{txt} 42{com}.             else {c -(}
{txt} 43{com}.                 noi di ", " _continue
{txt} 44{com}.             {c )-}
{txt} 45{com}.             local i = `i' + 1
{txt} 46{com}.         {c )-}
{txt} 47{com}.         {c )-}
{txt} 48{com}.         
.         if ( `total' == 0 ) {c -(}
{txt} 49{com}.             local class = "empty"
{txt} 50{com}.         {c )-}
{txt} 51{com}.         else if ( `unique' == 1 ) {c -(}
{txt} 52{com}.             local class = "constant"
{txt} 53{com}.         {c )-}
{txt} 54{com}.         else if ( `unique' == 2 ) {c -(}
{txt} 55{com}.             local class = "dummy"
{txt} 56{com}.         {c )-}
{txt} 57{com}.         else if ( `unique' < `category_cutoff' & `unique' < `total' ) {c -(}
{txt} 58{com}.             local class = "category"
{txt} 59{com}.         {c )-}
{txt} 60{com}.         else if (`unique' == `total') {c -(}
{txt} 61{com}.             local class = "identifier"
{txt} 62{com}.         {c )-} 
{txt} 63{com}.         else {c -(}
{txt} 64{com}.             local class = "string"
{txt} 65{com}.         {c )-}        
{txt} 66{com}.     {c )-}
{txt} 67{com}.     else {c -(}
{txt} 68{com}.         // lots of observations, not sure what to do yet
.         // should get random samples here
.         noi di "@example0 " `var'[1]
{txt} 69{com}.     {c )-}
{txt} 70{com}. {c )-}
{txt} 71{com}. else {c -(}
{txt} 72{com}.     // else assume it is numeric
. 
.     noi inspect `var'
{txt} 73{com}. 
.     local total = r(N)
{txt} 74{com}.     local unique = r(N_unique)
{txt} 75{com}. 
.     if ( `unique' < `category_cutoff' ) {c -(}
{txt} 76{com}.         local cat = "YES"
{txt} 77{com}.     {c )-}
{txt} 78{com}. 
.     if ( "`unique'" != "." ) {c -(}
{txt} 79{com}.         if ( `total' == 0 ) {c -(}
{txt} 80{com}.             local class = "empty"
{txt} 81{com}.         {c )-}
{txt} 82{com}.         else if ( `unique' == 1 ) {c -(}
{txt} 83{com}.             local class = "constant"
{txt} 84{com}.         {c )-}
{txt} 85{com}.         else if ( `unique' == 2 ) {c -(}
{txt} 86{com}.             local class = "dummy"
{txt} 87{com}.         {c )-}
{txt} 88{com}.         else if ( `unique' < `category_cutoff' & `unique' < `total' ) {c -(}
{txt} 89{com}.             capture confirm string variable `var'
{txt} 90{com}.             if ( !_rc ) {c -(}
{txt} 91{com}.                 local class = "other"
{txt} 92{com}.             {c )-} 
{txt} 93{com}.             else {c -(}
{txt} 94{com}.                 local class = "category"
{txt} 95{com}.             {c )-}
{txt} 96{com}.         {c )-}
{txt} 97{com}.         else if (`r(N_unique)' == `r(N)') {c -(}
{txt} 98{com}.             local class = "identifier"
{txt} 99{com}.         {c )-}
{txt}100{com}.     {c )-}
{txt}101{com}. 
. // TODO this takes too long?   sum `var', detail
.     noi sum `var'
{txt}102{com}.     local min = r(min)
{txt}103{com}.     local max = r(max)
{txt}104{com}.     local nobs = r(N)
{txt}105{com}.     
.     // TODO maybe the precision should be handled later (vm?)
.     if ( ( "`type'" != "double" & "`type'" != "float" ) & "`class'" == "constant" ) {c -(}
{txt}106{com}.         noi di "@mean " %9.0f r(mean)
{txt}107{com}.     {c )-} 
{txt}108{com}.     else {c -(}
{txt}109{com}.         noi di "@mean " %9.3f r(mean)
{txt}110{com}.     {c )-}
{txt}111{com}.     noi di "@sd " %9.3f `r(sd)'
{txt}112{com}.     // noi di "@skewness " %9.3f `r(skewness)'
.     // noi di "@kurtosis " %9.3f `r(kurtosis)'
.     
.     if ( "`type'" == "double" | "`type'" == "float" ) {c -(}
{txt}113{com}.       noi di "@min " %9.3f `r(min)'
{txt}114{com}.       noi di "@max " %9.3f `r(max)'
{txt}115{com}.       // noi di "@p50 " %9.3f `r(p50)'
.     {c )-} 
{txt}116{com}.     else {c -(}
{txt}117{com}.       noi di "@min " %9.0f `r(min)'
{txt}118{com}.       noi di "@max " %9.0f `r(max)'
{txt}119{com}.       // noi di "@p50 " %9.0f `r(p50)'
.     {c )-}
{txt}120{com}. {c )-}
{txt}121{com}. 
. 
. if ( ( "`class'" == "constant" ) & ( "`isstr'"!= "YES" ) ) {c -(}
{txt}122{com}.     noi di "@values " `var'[1]
{txt}123{com}. {c )-}
{txt}124{com}. else if ( "`class'" == "category" | "`class'" == "dummy" ) {c -(}
{txt}125{com}.     cap noi {c -(}
{txt}126{com}.         if ( "`isstr'" != "YES" ) {c -(}
{txt}127{com}.             cap tab `var', matcell( freq ) matrow( name )
{txt}128{com}.             if ( _rc != 0 | ("`r(r)'" != "`unique'") ) {c -(}
{txt}129{com}.                 local class = "other"
{txt}130{com}.                 local unique = r(r)
{txt}131{com}.             {c )-}
{txt}132{com}.             else {c -(}
{txt}133{com}.                 forvalues i=1/`unique' {c -(}
{txt}134{com}.                     if ( `i' == 1 ) {c -(}
{txt}135{com}.                         noi di "@values " _continue
{txt}136{com}.                     {c )-}
{txt}137{com}.                     noi di name[`i',1] _continue
{txt}138{com}.                     if ( `i' == `unique' ) {c -(}
{txt}139{com}.                         noi di ""
{txt}140{com}.                     {c )-}
{txt}141{com}.                     else {c -(}
{txt}142{com}.                         noi di ", " _continue
{txt}143{com}.                     {c )-}
{txt}144{com}.                 {c )-}
{txt}145{com}.                 forvalues i=1/`unique' {c -(}
{txt}146{com}.                     if ( `i' == 1 ) {c -(}
{txt}147{com}.                         noi di "@names " _continue
{txt}148{com}.                     {c )-}
{txt}149{com}.                     local val = name[`i',1]
{txt}150{com}.                     local lab :label (`var') `val'
{txt}151{com}.                     noi di `""`lab'""' _continue
{txt}152{com}.                     if ( `i' == `unique' ) {c -(}
{txt}153{com}.                         noi di ""
{txt}154{com}.                     {c )-}
{txt}155{com}.                     else {c -(}
{txt}156{com}.                         noi di ", " _continue
{txt}157{com}.                     {c )-}
{txt}158{com}.                 {c )-}
{txt}159{com}.                 forvalues i=1/`unique' {c -(}
{txt}160{com}.                     if ( `i' == 1 ) {c -(}
{txt}161{com}.                         noi di "@freq " _continue
{txt}162{com}.                     {c )-}
{txt}163{com}.                     noi di freq[`i',1] _continue
{txt}164{com}.                     if ( `i' == `unique' ) {c -(}
{txt}165{com}.                         noi di ""
{txt}166{com}.                     {c )-}
{txt}167{com}.                     else {c -(}
{txt}168{com}.                         noi di ", " _continue
{txt}169{com}.                     {c )-}
{txt}170{com}.                 {c )-}
{txt}171{com}.             {c )-}
{txt}172{com}.         {c )-}
{txt}173{com}.     {c )-}
{txt}174{com}. {c )-}
{txt}175{com}. else {c -(}
{txt}176{com}.     noi di "@example0 " `var'[1]
{txt}177{com}. {c )-}
{txt}178{com}. 
. // histogram
. if ( "`isstr'" != "YES" & ("`class'" == "other" | "`class'" == "identifier") ) {c -(}
{txt}179{com}. cap noi {c -(}
{txt}180{com}.     tempvar h w
{txt}181{com}.     twoway__histogram_gen `var', gen( `h' `w' )
{txt}182{com}.     forvalues i=1/`=r(n_x)' {c -(}
{txt}183{com}.         if ( `i' == 1 ) {c -(}
{txt}184{com}.             noi di "@histh " _continue
{txt}185{com}.         {c )-}
{txt}186{com}.         noi di `h'[`i'] _continue
{txt}187{com}.         if ( `i' == `=r(n_x)' ) {c -(}
{txt}188{com}.             noi di ""
{txt}189{com}.         {c )-}
{txt}190{com}.         else {c -(}
{txt}191{com}.             noi di ", " _continue
{txt}192{com}.         {c )-}
{txt}193{com}.     {c )-}
{txt}194{com}.     forvalues i=1/`=r(n_x)' {c -(}
{txt}195{com}.         if ( `i' == 1 ) {c -(}
{txt}196{com}.             noi di "@histw " _continue
{txt}197{com}.         {c )-}
{txt}198{com}.         noi di `w'[`i'] _continue
{txt}199{com}.         if ( `i' == `=r(n_x)' ) {c -(}
{txt}200{com}.             noi di ""
{txt}201{com}.         {c )-}
{txt}202{com}.         else {c -(}
{txt}203{com}.             noi di ", " _continue
{txt}204{com}.         {c )-}
{txt}205{com}.     {c )-}
{txt}206{com}.     {c )-}
{txt}207{com}. {c )-}
{txt}208{com}. 
. noi di "@type `type'"
{txt}209{com}. noi di "@label `label'"
{txt}210{com}. noi di "@class `class'"
{txt}211{com}. noi di "@N_unique `unique'"
{txt}212{com}. noi di "@N `total'"
{txt}213{com}. 
. noi di as res " "
{txt}214{com}. noi di "_@NOTES"
{txt}215{com}. 
. noi notes `var'
{txt}216{com}. 
. noi di as res " "
{txt}217{com}. {c )-}
{txt}218{com}. 
. 
. {c )-}
=====country=====
@example0 Australia
@type str29
@label Country
@class string
@N_unique 44
@N 39618
{res} 
_@NOTES
 
=====measure=====
@freq 10519, 10587, 1532, 1031, 15949
@values "Millions of US dollars, current prices, current PPPs, annual levels, seasonally adjusted", "Millions of US dollars, volume estimates, fixed PPPs, OECD reference year, annual levels, seasonally adjusted", "Millions of national currency, chained volume estimates, national reference year, annual levels, seasonally adjusted", "Millions of national currency, constant prices, national base year, annual levels, seasonally adjusted", "Millions of national currency, current prices, annual levels, seasonally adjusted"
@type str116
@label Measure
@class category
@N_unique 5
@N 39618
 
_@NOTES
 
=====frequency=====
@freq 39618
@values "Annual"
@example0 Annual
@type str6
@label Frequency
@class constant
@N_unique 1
@N 39618
 
_@NOTES
 
=====subject=====
@freq 42, 338, 276, 242, 5474, 242, 410, 314, 5414, 314, 5543, 5418, 242, 5474, 242, 5474, 1889, 24, 200, 174, 1872
@values "Acquisitions less disposals of valuables", "Changes in inventories", "Changes in inventories and acquisitions less disposals of valuables", "Exports of goods", "Exports of goods and services", "Exports of services", "External balance of goods and services", "Final consumption expenditure", "General government final consumption expenditure", "Gross capital formation", "Gross domestic product - expenditure approach", "Gross fixed capital formation", "Imports of goods", "Imports of goods and services", "Imports of services", "Private final consumption expenditure", "Residual item", "add. Actual individual consumption", "add. Final domestic demand (final consumption+GFCF)", "add. Gross national expenditure (final consumption+gross capital formation)", "add. Purchasing power parity of GDP"
@type str75
@label Subject
@class category
@N_unique 21
@N 39618
 
_@NOTES
 
=====period=====

period:  Period                                 {txt}Number of Observations
{hline 15}                             {hline 30}
                                            Total   Integers   Nonintegers
{c |}                  {res}#         {txt}Negative           {res}-         -          -
{txt}{c |}                  {res}#         {txt}Zero               {res}-         -          -
{txt}{c |}              {res}#   #         {txt}Positive       {res}39618     39618          -
{txt}{c |}      {res}#   #   #   #                        {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #   #   #         {txt}Total          {res}39618     39618          -
{txt}{c |}  {res}.   #   #   #   #         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}1947               2013                     39618
  (67 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 6}period {c |}{res}     39618    1989.631    16.08013       1947       2013
@mean  1989.631
@sd    16.080
@min      1947
@max      2013
@example0 1960
@histh .00110143, .00067118, .00134237, .00067118, .00134237, .00094654, .00189308, .00094654, .01034309, .00939655, .01879311, .00939655, .01879311, .00939655, .00939655, .01925777, .00986122, .01972244, .00986122, .01972244, .00987843, .01975686, .00991285, .02082387, .01041193, .02082387, .01042914, .02085829, .01042914, .01085939, .02187367, .01194361, .02858549, .01624606, .03314609, .01669351, .03338703, .01669351, .03364518, .01695166, .03390332, .01695166, .03390332, .01695166, .03390332
@histw 1947.7333, 1949.2, 1950.6666, 1952.1333, 1953.6, 1955.0667, 1956.5333, 1958, 1959.4667, 1960.9333, 1962.4, 1963.8667, 1965.3334, 1966.8, 1968.2667, 1969.7333, 1971.2, 1972.6666, 1974.1333, 1975.6, 1977.0667, 1978.5333, 1980, 1981.4667, 1982.9333, 1984.4, 1985.8667, 1987.3334, 1988.8, 1990.2667, 1991.7333, 1993.2, 1994.6666, 1996.1333, 1997.6, 1999.0667, 2000.5333, 2002, 2003.4667, 2004.9333, 2006.4, 2007.8667, 2009.3334, 2010.8, 2012.2667
@type int
@label Period
@class other
@N_unique 67
@N 39618
 
_@NOTES
 
=====value=====

value:  Value                                   {txt}Number of Observations
{hline 13}                               {hline 30}
                                            Total   Integers   Nonintegers
{c |}  {res}#                         {txt}Negative       {res}  900       476        424
{txt}{c |}  {res}#                         {txt}Zero           {res}   62        62          -
{txt}{c |}  {res}#                         {txt}Positive       {res}38656      6620      32036
{txt}{c |}  {res}#                                        {txt}{hline 5}     {hline 5}      {hline 5}
{c |}  {res}#                         {txt}Total          {res}39618      7158      32460
{txt}{c |}  {res}#   .   .   .   .         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}-1.24e+08      9.08e+09                     39618
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 7}value {c |}{res}     39618     8844815    1.25e+08  -1.24e+08   9.08e+09
@mean  8.84e+06
@sd  1.25e+08
@min -1.24e+08
@max  9.08e+09
@example0 17283
@histh 4.812e-09, 3.639e-11, 1.875e-11, 1.024e-11, 2.344e-12, 1.110e-12, 8.635e-13, 1.234e-12, 3.701e-13, 4.934e-13, 6.168e-13, 3.701e-13, 3.701e-13, 1.234e-13, 2.467e-13, 1.234e-13, 2.467e-13, 1.234e-13, 1.234e-13, 1.234e-13, 1.234e-13, 1.234e-13, 1.234e-13, 1.234e-13, 1.234e-13, 1.234e-13, 1.234e-13, 1.234e-13
@histw -21743578, 1.829e+08, 3.875e+08, 5.921e+08, 7.967e+08, 1.001e+09, 1.206e+09, 1.411e+09, 1.615e+09, 1.820e+09, 2.024e+09, 2.229e+09, 2.434e+09, 2.638e+09, 2.843e+09, 3.048e+09, 3.252e+09, 3.661e+09, 3.866e+09, 4.071e+09, 4.480e+09, 4.889e+09, 5.094e+09, 5.708e+09, 6.526e+09, 7.345e+09, 8.163e+09, 8.982e+09
@type double
@label Value
@class other
@N_unique .
@N 39618
 
_@NOTES
 
=====flags=====
@freq 4, 15816
@values "B", "E"
@type str1
@label Flags
@class dummy
@N_unique 2
@N 15820
 
_@NOTES
 
{com}. 
. // noi profiler report
. // profiler off
. {c )-}
{txt}
{com}. 
. exit, clear STATA
