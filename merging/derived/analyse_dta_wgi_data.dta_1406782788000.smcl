{smcl}
{txt}{sf}{ul off}

{com}. /** 
>  * A do file to run the standard stats for a whole data set. 
>  *
>  * Note that you must delete the files in the derived directory
>  * for changes to be reflected in the output.
>  *
>  * @version 0.1
> */
. 
. // profiler on
. 
. use  "/Users/mas/Dropbox/National_Pride_Large_Data/Data/EVC_data/Indexes/WorldBankWorldwideGovernanceIndicators/wgi/wgi_data.dta"
{txt}
{com}. 
. describe, short

{txt}Contains data from {res}/Users/mas/Dropbox/National_Pride_Large_Data/Data/EVC_data/Indexes/WorldBankWorldwideGovernanceIndicators/wgi/wgi_data.dta
{txt}  obs:{res}         3,010                          
{txt} vars:{res}             8                          31 Jul 2014 14:59
{txt} size:{res}        87,290                          
{txt}Sorted by:  

{com}. 
. local N = r(N)
{txt}
{com}. local variables = r(k)
{txt}
{com}. 
. di "@N `N'"
{res}@N 3010
{txt}
{com}. di "@variables `variables'"
{res}@variables 8
{txt}
{com}. 
. datasignature
  {res}3010:8(40515):1531485188:2726731126
{txt}
{com}. local datasig = "`r(datasignature)'"
{txt}
{com}. 
. di "@datasignature `datasig'"
{res}@datasignature 3010:8(40515):1531485188:2726731126
{txt}
{com}. 
. cap noi xtset
{err}panel variable not set; use {bf:xtset} {it:varname} ...
{txt}
{com}. if ( !_rc ) {c -(}
.     di "@timevar `r(timevar)'"
.     di "@panelvar `r(panelvar)'"
. {c )-}
{txt}
{com}. 
. notes _dta
{res}{txt}
{com}. 
. qui {c -(}
{txt}
{com}. 
. foreach var of varlist * {c -(}
{txt}  2{com}. 
. di "=====`var'====="
{txt}  3{com}. qui {c -(}
{txt}  4{com}. local category_cutoff = 30
{txt}  5{com}. 
. // this takes very long on large datasets (and does mostly the same as other things below)
. // codebook `var'
. 
. local isstr = ""
{txt}  6{com}. local unique = ""
{txt}  7{com}. local total = ""
{txt}  8{com}. local class = ""
{txt}  9{com}. 
. local type : type `var' 
{txt} 10{com}. local label : variable label `var' 
{txt} 11{com}. 
. local class = "other"
{txt} 12{com}. 
. // test for string
. capture confirm string variable `var'
{txt} 13{com}. if ( !_rc ) {c -(}
{txt} 14{com}.     // we now it is a string
.     local isstr = "YES"
{txt} 15{com}.     capture tab `var', matcell( freq )
{txt} 16{com}.     if ( !_rc ) {c -(}
{txt} 17{com}.     
.         // not too many obs
.         local total = `r(N)'
{txt} 18{com}.         local unique = r(r)
{txt} 19{com}. 
.         if ( `unique' < `category_cutoff' ) {c -(}
{txt} 20{com}.         forvalues i=1/`unique' {c -(}
{txt} 21{com}.             if ( `i' == 1 ) {c -(}
{txt} 22{com}.                 noi di "@freq " _continue
{txt} 23{com}.             {c )-}
{txt} 24{com}.             noi di freq[`i',1] _continue
{txt} 25{com}.             if ( `i' == `unique' ) {c -(}
{txt} 26{com}.                 noi di ""
{txt} 27{com}.             {c )-}
{txt} 28{com}.             else {c -(}
{txt} 29{com}.                 noi di ", " _continue
{txt} 30{com}.             {c )-}
{txt} 31{com}.         {c )-}
{txt} 32{com}. 
.         levelsof `var', local(levels)
{txt} 33{com}.         local i = 1
{txt} 34{com}.         foreach l of local levels {c -(}
{txt} 35{com}.             if ( `i' == 1 ) {c -(}
{txt} 36{com}.                 noi di "@values " _continue
{txt} 37{com}.             {c )-}
{txt} 38{com}.             noi di `""`l'""' _continue
{txt} 39{com}.             if ( `i' == `unique' ) {c -(}
{txt} 40{com}.                 noi di ""
{txt} 41{com}.             {c )-}
{txt} 42{com}.             else {c -(}
{txt} 43{com}.                 noi di ", " _continue
{txt} 44{com}.             {c )-}
{txt} 45{com}.             local i = `i' + 1
{txt} 46{com}.         {c )-}
{txt} 47{com}.         {c )-}
{txt} 48{com}.         
.         if ( `total' == 0 ) {c -(}
{txt} 49{com}.             local class = "empty"
{txt} 50{com}.         {c )-}
{txt} 51{com}.         else if ( `unique' == 1 ) {c -(}
{txt} 52{com}.             local class = "constant"
{txt} 53{com}.         {c )-}
{txt} 54{com}.         else if ( `unique' == 2 ) {c -(}
{txt} 55{com}.             local class = "dummy"
{txt} 56{com}.         {c )-}
{txt} 57{com}.         else if ( `unique' < `category_cutoff' & `unique' < `total' ) {c -(}
{txt} 58{com}.             local class = "category"
{txt} 59{com}.         {c )-}
{txt} 60{com}.         else if (`unique' == `total') {c -(}
{txt} 61{com}.             local class = "identifier"
{txt} 62{com}.         {c )-} 
{txt} 63{com}.         else {c -(}
{txt} 64{com}.             local class = "string"
{txt} 65{com}.         {c )-}        
{txt} 66{com}.     {c )-}
{txt} 67{com}.     else {c -(}
{txt} 68{com}.         // lots of observations, not sure what to do yet
.         // should get random samples here
.         noi di "@example0 " `var'[1]
{txt} 69{com}.     {c )-}
{txt} 70{com}. {c )-}
{txt} 71{com}. else {c -(}
{txt} 72{com}.     // else assume it is numeric
. 
.     noi inspect `var'
{txt} 73{com}. 
.     local total = r(N)
{txt} 74{com}.     local unique = r(N_unique)
{txt} 75{com}. 
.     if ( `unique' < `category_cutoff' ) {c -(}
{txt} 76{com}.         local cat = "YES"
{txt} 77{com}.     {c )-}
{txt} 78{com}. 
.     if ( "`unique'" != "." ) {c -(}
{txt} 79{com}.         if ( `total' == 0 ) {c -(}
{txt} 80{com}.             local class = "empty"
{txt} 81{com}.         {c )-}
{txt} 82{com}.         else if ( `unique' == 1 ) {c -(}
{txt} 83{com}.             local class = "constant"
{txt} 84{com}.         {c )-}
{txt} 85{com}.         else if ( `unique' == 2 ) {c -(}
{txt} 86{com}.             local class = "dummy"
{txt} 87{com}.         {c )-}
{txt} 88{com}.         else if ( `unique' < `category_cutoff' & `unique' < `total' ) {c -(}
{txt} 89{com}.             capture confirm string variable `var'
{txt} 90{com}.             if ( !_rc ) {c -(}
{txt} 91{com}.                 local class = "other"
{txt} 92{com}.             {c )-} 
{txt} 93{com}.             else {c -(}
{txt} 94{com}.                 local class = "category"
{txt} 95{com}.             {c )-}
{txt} 96{com}.         {c )-}
{txt} 97{com}.         else if (`r(N_unique)' == `r(N)') {c -(}
{txt} 98{com}.             local class = "identifier"
{txt} 99{com}.         {c )-}
{txt}100{com}.     {c )-}
{txt}101{com}. 
. // TODO this takes too long?   sum `var', detail
.     noi sum `var'
{txt}102{com}.     local min = r(min)
{txt}103{com}.     local max = r(max)
{txt}104{com}.     local nobs = r(N)
{txt}105{com}.     
.     // TODO maybe the precision should be handled later (vm?)
.     if ( ( "`type'" != "double" & "`type'" != "float" ) & "`class'" == "constant" ) {c -(}
{txt}106{com}.         noi di "@mean " %9.0f r(mean)
{txt}107{com}.     {c )-} 
{txt}108{com}.     else {c -(}
{txt}109{com}.         noi di "@mean " %9.3f r(mean)
{txt}110{com}.     {c )-}
{txt}111{com}.     noi di "@sd " %9.3f `r(sd)'
{txt}112{com}.     // noi di "@skewness " %9.3f `r(skewness)'
.     // noi di "@kurtosis " %9.3f `r(kurtosis)'
.     
.     if ( "`type'" == "double" | "`type'" == "float" ) {c -(}
{txt}113{com}.       noi di "@min " %9.3f `r(min)'
{txt}114{com}.       noi di "@max " %9.3f `r(max)'
{txt}115{com}.       // noi di "@p50 " %9.3f `r(p50)'
.     {c )-} 
{txt}116{com}.     else {c -(}
{txt}117{com}.       noi di "@min " %9.0f `r(min)'
{txt}118{com}.       noi di "@max " %9.0f `r(max)'
{txt}119{com}.       // noi di "@p50 " %9.0f `r(p50)'
.     {c )-}
{txt}120{com}. {c )-}
{txt}121{com}. 
. 
. if ( ( "`class'" == "constant" ) & ( "`isstr'"!= "YES" ) ) {c -(}
{txt}122{com}.     noi di "@values " `var'[1]
{txt}123{com}. {c )-}
{txt}124{com}. else if ( "`class'" == "category" | "`class'" == "dummy" ) {c -(}
{txt}125{com}.     cap noi {c -(}
{txt}126{com}.         if ( "`isstr'" != "YES" ) {c -(}
{txt}127{com}.             cap tab `var', matcell( freq ) matrow( name )
{txt}128{com}.             if ( _rc != 0 | ("`r(r)'" != "`unique'") ) {c -(}
{txt}129{com}.                 local class = "other"
{txt}130{com}.                 local unique = r(r)
{txt}131{com}.             {c )-}
{txt}132{com}.             else {c -(}
{txt}133{com}.                 forvalues i=1/`unique' {c -(}
{txt}134{com}.                     if ( `i' == 1 ) {c -(}
{txt}135{com}.                         noi di "@values " _continue
{txt}136{com}.                     {c )-}
{txt}137{com}.                     noi di name[`i',1] _continue
{txt}138{com}.                     if ( `i' == `unique' ) {c -(}
{txt}139{com}.                         noi di ""
{txt}140{com}.                     {c )-}
{txt}141{com}.                     else {c -(}
{txt}142{com}.                         noi di ", " _continue
{txt}143{com}.                     {c )-}
{txt}144{com}.                 {c )-}
{txt}145{com}.                 forvalues i=1/`unique' {c -(}
{txt}146{com}.                     if ( `i' == 1 ) {c -(}
{txt}147{com}.                         noi di "@names " _continue
{txt}148{com}.                     {c )-}
{txt}149{com}.                     local val = name[`i',1]
{txt}150{com}.                     local lab :label (`var') `val'
{txt}151{com}.                     noi di `""`lab'""' _continue
{txt}152{com}.                     if ( `i' == `unique' ) {c -(}
{txt}153{com}.                         noi di ""
{txt}154{com}.                     {c )-}
{txt}155{com}.                     else {c -(}
{txt}156{com}.                         noi di ", " _continue
{txt}157{com}.                     {c )-}
{txt}158{com}.                 {c )-}
{txt}159{com}.                 forvalues i=1/`unique' {c -(}
{txt}160{com}.                     if ( `i' == 1 ) {c -(}
{txt}161{com}.                         noi di "@freq " _continue
{txt}162{com}.                     {c )-}
{txt}163{com}.                     noi di freq[`i',1] _continue
{txt}164{com}.                     if ( `i' == `unique' ) {c -(}
{txt}165{com}.                         noi di ""
{txt}166{com}.                     {c )-}
{txt}167{com}.                     else {c -(}
{txt}168{com}.                         noi di ", " _continue
{txt}169{com}.                     {c )-}
{txt}170{com}.                 {c )-}
{txt}171{com}.             {c )-}
{txt}172{com}.         {c )-}
{txt}173{com}.     {c )-}
{txt}174{com}. {c )-}
{txt}175{com}. else {c -(}
{txt}176{com}.     noi di "@example0 " `var'[1]
{txt}177{com}. {c )-}
{txt}178{com}. 
. // histogram
. if ( "`isstr'" != "YES" & ("`class'" == "other" | "`class'" == "identifier") ) {c -(}
{txt}179{com}. cap noi {c -(}
{txt}180{com}.     tempvar h w
{txt}181{com}.     twoway__histogram_gen `var', gen( `h' `w' )
{txt}182{com}.     forvalues i=1/`=r(n_x)' {c -(}
{txt}183{com}.         if ( `i' == 1 ) {c -(}
{txt}184{com}.             noi di "@histh " _continue
{txt}185{com}.         {c )-}
{txt}186{com}.         noi di `h'[`i'] _continue
{txt}187{com}.         if ( `i' == `=r(n_x)' ) {c -(}
{txt}188{com}.             noi di ""
{txt}189{com}.         {c )-}
{txt}190{com}.         else {c -(}
{txt}191{com}.             noi di ", " _continue
{txt}192{com}.         {c )-}
{txt}193{com}.     {c )-}
{txt}194{com}.     forvalues i=1/`=r(n_x)' {c -(}
{txt}195{com}.         if ( `i' == 1 ) {c -(}
{txt}196{com}.             noi di "@histw " _continue
{txt}197{com}.         {c )-}
{txt}198{com}.         noi di `w'[`i'] _continue
{txt}199{com}.         if ( `i' == `=r(n_x)' ) {c -(}
{txt}200{com}.             noi di ""
{txt}201{com}.         {c )-}
{txt}202{com}.         else {c -(}
{txt}203{com}.             noi di ", " _continue
{txt}204{com}.         {c )-}
{txt}205{com}.     {c )-}
{txt}206{com}.     {c )-}
{txt}207{com}. {c )-}
{txt}208{com}. 
. noi di "@type `type'"
{txt}209{com}. noi di "@label `label'"
{txt}210{com}. noi di "@class `class'"
{txt}211{com}. noi di "@N_unique `unique'"
{txt}212{com}. noi di "@N `total'"
{txt}213{com}. 
. noi di as res " "
{txt}214{com}. noi di "_@NOTES"
{txt}215{com}. 
. noi notes `var'
{txt}216{com}. 
. noi di as res " "
{txt}217{com}. {c )-}
{txt}218{com}. 
. 
. {c )-}
=====year=====

{res}year:                                           {txt}Number of Observations
{hline 7}                                     {hline 30}
                                            Total   Integers   Nonintegers
{c |}                  {res}#         {txt}Negative           {res}-         -          -
{txt}{c |}                  {res}#         {txt}Zero               {res}-         -          -
{txt}{c |}          {res}#   #   #         {txt}Positive       {res} 3010      3010          -
{txt}{c |}  {res}#   #   #   #   #                        {txt}{hline 5}     {hline 5}      {hline 5}
{c |}  {res}#   #   #   #   #         {txt}Total          {res} 3010      3010          -
{txt}{c |}  {res}#   #   #   #   #         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}1996               2012                      3010
  (14 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}year {c |}{res}      3010    2005.071    4.698261       1996       2012
@mean  2005.071
@sd     4.698
@min      1996
@max      2012
@values 1996, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012
@names "1996", "1998", "2000", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012"
@freq 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215
@type int
@label 
@class category
@N_unique 14
@N 3010
 
_@NOTES
 
=====iso=====
@example0 ABW
@type str3
@label WBCode
@class string
@N_unique 215
@N 3010
 
_@NOTES
 
=====VoiceandAccountability=====

VoiceandAccountability:  Voice and Accounta     {txt}Number of Observations
{hline 43} {hline 30}
                                            Total   Integers   Nonintegers
{c |}          {res}#                 {txt}Negative       {res} 1442         -       1442
{txt}{c |}          {res}#   #   #         {txt}Zero               {res}-         -          -
{txt}{c |}      {res}#   #   #   #         {txt}Positive       {res} 1459         -       1459
{txt}{c |}      {res}#   #   #   #                        {txt}{hline 5}     {hline 5}      {hline 5}
{c |}  {res}#   #   #   #   #         {txt}Total          {res} 2901         -       2901
{txt}{c |}  {res}#   #   #   #   #         {txt}Missing        {res}  109
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}-2.284278       1.82637                      3010
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
VoiceandAc~y {c |}{res}      2901   -.0081173    1.000917  -2.284278    1.82637
@mean    -0.008
@sd     1.001
@min    -2.284
@max     1.826
@example0 .
@histh .04846964, .07983234, .05987426, .10264158, .09408811, .18532507, .17962277, .16251583, .27656204, .30222243, .27941319, .31647822, .2537528, .19387855, .31077591, .27371088, .35354322, .38775709, .28226435, .32788283, .23379472, .24805048, .29366896, .31077591, .26515743, .2537528, .29937127, .61014718, .3620967, .23094356, .2537528, .28226435, .12830198, .02851155
@histw -2.2238276, -2.1029263, -1.9820248, -1.8611234, -1.740222, -1.6193205, -1.498419, -1.3775177, -1.2566162, -1.1357148, -1.0148134, -.89391196, -.77301049, -.65210909, -.53120768, -.41030622, -.28940478, -.16850336, -.04760193, .0732995, .19420093, .31510237, .4360038, .55690521, .67780668, .79870808, .91960949, 1.0405109, 1.1614124, 1.2823138, 1.4032153, 1.5241166, 1.6450181, 1.7659196
@type float
@label Voice and Accountability
@class other
@N_unique .
@N 2901
 
_@NOTES
 
=====PoliticalStabilityNoViolence=====

PoliticalStabilityNoViolence:  Political St     {txt}Number of Observations
{hline 43} {hline 30}
                                            Total   Integers   Nonintegers
{c |}              {res}#             {txt}Negative       {res} 1321         -       1321
{txt}{c |}              {res}#             {txt}Zero               {res}-         -          -
{txt}{c |}          {res}#   #             {txt}Positive       {res} 1530         -       1530
{txt}{c |}          {res}#   #   #                        {txt}{hline 5}     {hline 5}      {hline 5}
{c |}          {res}#   #   #         {txt}Total          {res} 2851         -       2851
{txt}{c |}  {res}.   #   #   #   #         {txt}Missing        {res}  159
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}-3.323905      1.938085                      3010
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
PoliticalS~e {c |}{res}      2851   -.0247876    .9999743  -3.323905   1.938085
@mean    -0.025
@sd     1.000
@min    -3.324
@max     1.938
@example0 .
@histh .0090655, .00453275, .00679912, .01586462, .03399562, .03852837, .04759387, .05665937, .08838861, .09745411, .09518774, .11105236, .16771172, .19717459, .20397373, .19944097, .24703483, .2583667, .30596057, .33315706, .29462871, .39208281, .36261994, .32409158, .35128808, .29689509, .39661556, .43287757, .47140592, .30142784, .22890384, .07705674, .0090655, .00453275
@histw -3.2465224, -3.091758, -2.9369936, -2.7822292, -2.6274648, -2.4727004, -2.3179359, -2.1631715, -2.0084071, -1.8536427, -1.6988783, -1.5441139, -1.3893495, -1.234585, -1.0798206, -.92505628, -.77029186, -.61552745, -.46076307, -.30599865, -.15123424, .00353016, .15829456, .31305897, .46782336, .62258774, .77735215, .93211657, 1.0868809, 1.2416453, 1.3964097, 1.5511742, 1.7059386, 1.860703
@type float
@label Political Stability No Violence
@class other
@N_unique .
@N 2851
 
_@NOTES
 
=====GovernmentEffectiveness=====

GovernmentEffectiveness:  Government Effect     {txt}Number of Observations
{hline 43} {hline 30}
                                            Total   Integers   Nonintegers
{c |}      {res}#                     {txt}Negative       {res} 1611         -       1611
{txt}{c |}      {res}#   #                 {txt}Zero               {res}-         -          -
{txt}{c |}      {res}#   #                 {txt}Positive       {res} 1228         -       1228
{txt}{c |}      {res}#   #   #                            {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #   #   #         {txt}Total          {res} 2839         -       2839
{txt}{c |}  {res}.   #   #   #   #         {txt}Missing        {res}  171
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}-2.450037      2.429651                      3010
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
Government~s {c |}{res}      2839   -.0068873     1.00275  -2.450037   2.429651
@mean    -0.007
@sd     1.003
@min    -2.450
@max     2.430
@example0 .
@histh .00981706, .02454265, .01717985, .02699691, .04663103, .11289617, .13743882, .14971013, .24051793, .26506057, .34605131, .4515847, .46876454, .50557852, .380411, .35586837, .39022806, .28714895, .2429722, .22579235, .26751485, .21842955, .2356094, .24051793, .17916131, .24051793, .09080779, .1521644, .14971013, .18652411, .15707293, .10553338, .04908529, .00981706
@histw -2.3782773, -2.2347572, -2.0912368, -1.9477166, -1.8041962, -1.660676, -1.5171558, -1.3736355, -1.2301152, -1.0865949, -.9430747, -.79955447, -.65603417, -.51251394, -.36899364, -.22547339, -.08195312, .06156714, .20508741, .34860766, .49212793, .63564819, .77916849, .92268872, 1.066209, 1.2097292, 1.3532495, 1.4967698, 1.64029, 1.7838103, 1.9273306, 2.0708508, 2.2143712, 2.3578913
@type float
@label Government Effectiveness
@class other
@N_unique .
@N 2839
 
_@NOTES
 
=====RegulatoryQuality=====

RegulatoryQuality:  Regulatory Quality          {txt}Number of Observations
{hline 38}      {hline 30}
                                            Total   Integers   Nonintegers
{c |}          {res}#                 {txt}Negative       {res} 1534         -       1534
{txt}{c |}          {res}#                 {txt}Zero               {res}-         -          -
{txt}{c |}          {res}#   #             {txt}Positive       {res} 1305         -       1305
{txt}{c |}      {res}#   #   #                            {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #   #   #         {txt}Total          {res} 2839         -       2839
{txt}{c |}  {res}.   #   #   #   #         {txt}Missing        {res}  171
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}-2.675439      2.247344                      3010
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
Regulatory~y {c |}{res}      2839   -.0073963    1.000563  -2.675439   2.247344
@mean    -0.007
@sd     1.001
@min    -2.675
@max     2.247
@example0 .
@histh .01459668, .01702946, .03649169, .07055061, .05595393, .03649169, .05108837, .10460952, .14353399, .20435348, .2749041, .27247131, .26274019, .30166465, .42087087, .50115258, .38924474, .43060198, .25544184, .24084517, .31869411, .26760575, .28463522, .22138295, .25544184, .24814351, .28950077, .2262485, .19948792, .20921904, .16056345, .10947508, .0243278, .00729834
@histw -2.6030455, -2.4582577, -2.3134699, -2.1686821, -2.0238945, -1.8791066, -1.734319, -1.5895312, -1.4447434, -1.2999556, -1.1551678, -1.0103801, -.86559236, -.72080457, -.57601684, -.43122908, -.28644133, -.14165355, .00313421, .14792196, .29270974, .4374975, .58228523, .72707301, .87186074, 1.0166485, 1.1614363, 1.3062241, 1.4510118, 1.5957996, 1.7405874, 1.8853751, 2.0301628, 2.1749506
@type float
@label Regulatory Quality
@class other
@N_unique .
@N 2839
 
_@NOTES
 
=====RuleofLaw=====

RuleofLaw:  Rule of Law                         {txt}Number of Observations
{hline 23}                     {hline 30}
                                            Total   Integers   Nonintegers
{c |}          {res}#                 {txt}Negative       {res} 1577         -       1577
{txt}{c |}          {res}#                 {txt}Zero               {res}-         -          -
{txt}{c |}      {res}#   #   #             {txt}Positive       {res} 1325         -       1325
{txt}{c |}      {res}#   #   #   #                        {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #   #   #         {txt}Total          {res} 2902         -       2902
{txt}{c |}  {res}.   #   #   #   #         {txt}Missing        {res}  108
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}-2.668873       1.99964                      3010
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 3}RuleofLaw {c |}{res}      2902   -.0106954    .9979626  -2.668873    1.99964
@mean    -0.011
@sd     0.998
@min    -2.669
@max     2.000
@example0 .
@histh .00752877, .00752877, .01003836, .01003836, .01254795, .03513427, .05772059, .12046036, .16061382, .1932385, .30617008, .30366051, .35385233, .42412087, .4115729, .40906331, .41910169, .28609335, .29111254, .25848785, .29362214, .12798914, .22837277, .30115092, .28609335, .43415922, .30115092, .20076728, .1932385, .15308504, .10289323, .17316177, .23841113, .17065218
@histw -2.6002183, -2.462909, -2.3255999, -2.1882906, -2.0509813, -1.9136722, -1.776363, -1.6390538, -1.5017445, -1.3644353, -1.2271261, -1.0898169, -.95250773, -.81519854, -.67788935, -.54058009, -.4032709, -.26596171, -.1286525, .00865672, .14596592, .28327513, .42058435, .55789357, .69520277, .83251196, .96982116, 1.1071304, 1.2444396, 1.3817488, 1.519058, 1.6563672, 1.7936764, 1.9309856
@type float
@label Rule of Law
@class other
@N_unique .
@N 2902
 
_@NOTES
 
=====ControlofCorruption=====

ControlofCorruption:  Control of Corruption     {txt}Number of Observations
{hline 43} {hline 30}
                                            Total   Integers   Nonintegers
{c |}      {res}#                     {txt}Negative       {res} 1674         -       1674
{txt}{c |}      {res}#                     {txt}Zero               {res}-         -          -
{txt}{c |}      {res}#                     {txt}Positive       {res} 1171         -       1171
{txt}{c |}      {res}#   #                                {txt}{hline 5}     {hline 5}      {hline 5}
{c |}      {res}#   #   #             {txt}Total          {res} 2845         -       2845
{txt}{c |}  {res}#   #   #   #   #         {txt}Missing        {res}  165
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}-2.057458      2.585616                      3010
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
ControlofC~n {c |}{res}      2845   -.0058401     1.00293  -2.057458   2.585616
@mean    -0.006
@sd     1.003
@min    -2.057
@max     2.586
@example0 .
@histh .00514779, .03088675, .04890403, .0669213, .12869482, .22650287, .28055468, .43241456, .44785795, .42469287, .48131859, .47874472, .50963145, .42726678, .30371976, .22907677, .23422456, .31658924, .19561611, .2033378, .16730325, .2676852, .16987716, .11067754, .32688484, .14671208, .06177351, .06177351, .07206909, .10038196, .12612091, .12097313, .07979079, .03860844
@histw -1.9891779, -1.8526169, -1.7160559, -1.579495, -1.4429339, -1.3063729, -1.1698118, -1.0332509, -.89668989, -.76012892, -.62356788, -.4870069, -.3504459, -.21388489, -.07732388, .05923712, .19579811, .33235911, .46892011, .60548115, .74204212, .8786031, 1.0151641, 1.1517252, 1.2882861, 1.4248471, 1.5614082, 1.6979691, 1.8345301, 1.9710912, 2.1076522, 2.2442131, 2.380774, 2.5173352
@type float
@label Control of Corruption
@class other
@N_unique .
@N 2845
 
_@NOTES
 
{txt}
{com}. 
. // noi profiler report
. // profiler off
. 
. exit, clear STATA
