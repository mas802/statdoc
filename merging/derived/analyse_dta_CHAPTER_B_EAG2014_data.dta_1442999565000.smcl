{smcl}
{txt}{sf}{ul off}

{com}. /** 
>  * A do file to run the standard stats for a whole data set. 
>  *
>  * Note that you must delete the files in the derived directory
>  * for changes to be reflected in the output.
>  *
>  * @version 0.1
> */
. 
. // profiler on
. 
. cap noi {c -(}
. 
. use  "/Users/mas/Dropbox/National_Pride_Large_Data/Data/EVC_data/OECD data/Education/EducationataGlance/Chapter_B_Data_EducationExpenditure/CHAPTER_B_EAG2014_data.dta"
. 
. describe, short

{txt}Contains data from {res}/Users/mas/Dropbox/National_Pride_Large_Data/Data/EVC_data/OECD data/Education/EducationataGlance/Chapter_B_Data_EducationExpenditure/CHAPTER_B_EAG2014_data.dta
{txt}  obs:{res}         3,510                          
{txt} vars:{res}             6                          23 Sep 2015 19:12
{txt} size:{res}       737,100                          
{txt}Sorted by:  
{com}. 
. local N = r(N)
. local variables = r(k)
. 
. di "@N `N'"
{res}@N 3510
{com}. di "@variables `variables'"
{res}@variables 6
{com}. 
. datasignature
  {res}3510:6(53112):2286794923:2119275866
{com}. local datasig = "`r(datasignature)'"
. 
. di "@datasignature `datasig'"
{res}@datasignature 3510:6(53112):2286794923:2119275866
{com}. 
. cap noi xtset
{err}panel variable not set; use {bf:xtset} {it:varname} ...
{com}. if ( !_rc ) {c -(}
.     di "@timevar `r(timevar)'"
.     di "@panelvar `r(panelvar)'"
. {c )-}
. 
. notes _dta
{res}{com}. 
. qui {c -(}
. 
. foreach var of varlist * {c -(}
{txt}  2{com}. 
. di "=====`var'====="
{txt}  3{com}. qui {c -(}
{txt}  4{com}. local category_cutoff = 30
{txt}  5{com}. 
. // this takes very long on large datasets (and does mostly the same as other things below)
. // codebook `var'
. 
. local isstr = ""
{txt}  6{com}. local unique = ""
{txt}  7{com}. local total = ""
{txt}  8{com}. local class = ""
{txt}  9{com}. 
. local type : type `var' 
{txt} 10{com}. local label : variable label `var' 
{txt} 11{com}. 
. local class = "other"
{txt} 12{com}. 
. // test for string
. capture confirm string variable `var'
{txt} 13{com}. if ( !_rc ) {c -(}
{txt} 14{com}.     // we now it is a string
.     local isstr = "YES"
{txt} 15{com}.     capture tab `var', matcell( freq )
{txt} 16{com}.     if ( !_rc ) {c -(}
{txt} 17{com}.     
.         // not too many obs
.         local total = `r(N)'
{txt} 18{com}.         local unique = r(r)
{txt} 19{com}. 
.         if ( `unique' < `category_cutoff' ) {c -(}
{txt} 20{com}.         forvalues i=1/`unique' {c -(}
{txt} 21{com}.             if ( `i' == 1 ) {c -(}
{txt} 22{com}.                 noi di "@freq " _continue
{txt} 23{com}.             {c )-}
{txt} 24{com}.             noi di freq[`i',1] _continue
{txt} 25{com}.             if ( `i' == `unique' ) {c -(}
{txt} 26{com}.                 noi di ""
{txt} 27{com}.             {c )-}
{txt} 28{com}.             else {c -(}
{txt} 29{com}.                 noi di ", " _continue
{txt} 30{com}.             {c )-}
{txt} 31{com}.         {c )-}
{txt} 32{com}. 
.         levelsof `var', local(levels)
{txt} 33{com}.         local i = 1
{txt} 34{com}.         foreach l of local levels {c -(}
{txt} 35{com}.             if ( `i' == 1 ) {c -(}
{txt} 36{com}.                 noi di "@values " _continue
{txt} 37{com}.             {c )-}
{txt} 38{com}.             noi di `""`l'""' _continue
{txt} 39{com}.             if ( `i' == `unique' ) {c -(}
{txt} 40{com}.                 noi di ""
{txt} 41{com}.             {c )-}
{txt} 42{com}.             else {c -(}
{txt} 43{com}.                 noi di ", " _continue
{txt} 44{com}.             {c )-}
{txt} 45{com}.             local i = `i' + 1
{txt} 46{com}.         {c )-}
{txt} 47{com}.         {c )-}
{txt} 48{com}.         
.         if ( `total' == 0 ) {c -(}
{txt} 49{com}.             local class = "empty"
{txt} 50{com}.         {c )-}
{txt} 51{com}.         else if ( `unique' == 1 ) {c -(}
{txt} 52{com}.             local class = "constant"
{txt} 53{com}.         {c )-}
{txt} 54{com}.         else if ( `unique' == 2 ) {c -(}
{txt} 55{com}.             local class = "dummy"
{txt} 56{com}.         {c )-}
{txt} 57{com}.         else if ( `unique' < `category_cutoff' & `unique' < `total' ) {c -(}
{txt} 58{com}.             local class = "category"
{txt} 59{com}.         {c )-}
{txt} 60{com}.         else if (`unique' == `total') {c -(}
{txt} 61{com}.             local class = "identifier"
{txt} 62{com}.         {c )-} 
{txt} 63{com}.         else {c -(}
{txt} 64{com}.             local class = "string"
{txt} 65{com}.         {c )-}        
{txt} 66{com}.     {c )-}
{txt} 67{com}.     else {c -(}
{txt} 68{com}.         // lots of observations, not sure what to do yet
.         // should get random samples here
.         noi di "@example0 " `var'[1]
{txt} 69{com}.     {c )-}
{txt} 70{com}. {c )-}
{txt} 71{com}. else {c -(}
{txt} 72{com}.     // else assume it is numeric
. 
.     noi inspect `var'
{txt} 73{com}. 
.     local total = r(N)
{txt} 74{com}.     local unique = r(N_unique)
{txt} 75{com}. 
.     if ( `unique' < `category_cutoff' ) {c -(}
{txt} 76{com}.         local cat = "YES"
{txt} 77{com}.     {c )-}
{txt} 78{com}. 
.     if ( "`unique'" != "." ) {c -(}
{txt} 79{com}.         if ( `total' == 0 ) {c -(}
{txt} 80{com}.             local class = "empty"
{txt} 81{com}.         {c )-}
{txt} 82{com}.         else if ( `unique' == 1 ) {c -(}
{txt} 83{com}.             local class = "constant"
{txt} 84{com}.         {c )-}
{txt} 85{com}.         else if ( `unique' == 2 ) {c -(}
{txt} 86{com}.             local class = "dummy"
{txt} 87{com}.         {c )-}
{txt} 88{com}.         else if ( `unique' < `category_cutoff' & `unique' < `total' ) {c -(}
{txt} 89{com}.             capture confirm string variable `var'
{txt} 90{com}.             if ( !_rc ) {c -(}
{txt} 91{com}.                 local class = "other"
{txt} 92{com}.             {c )-} 
{txt} 93{com}.             else {c -(}
{txt} 94{com}.                 local class = "category"
{txt} 95{com}.             {c )-}
{txt} 96{com}.         {c )-}
{txt} 97{com}.         else if (`r(N_unique)' == `r(N)') {c -(}
{txt} 98{com}.             local class = "identifier"
{txt} 99{com}.         {c )-}
{txt}100{com}.     {c )-}
{txt}101{com}. 
. // TODO this takes too long?   sum `var', detail
.     noi sum `var'
{txt}102{com}.     local min = r(min)
{txt}103{com}.     local max = r(max)
{txt}104{com}.     local nobs = r(N)
{txt}105{com}.     
.     // TODO maybe the precision should be handled later (vm?)
.     if ( ( "`type'" != "double" & "`type'" != "float" ) & "`class'" == "constant" ) {c -(}
{txt}106{com}.         noi di "@mean " %9.0f r(mean)
{txt}107{com}.     {c )-} 
{txt}108{com}.     else {c -(}
{txt}109{com}.         noi di "@mean " %9.3f r(mean)
{txt}110{com}.     {c )-}
{txt}111{com}.     noi di "@sd " %9.3f `r(sd)'
{txt}112{com}.     // noi di "@skewness " %9.3f `r(skewness)'
.     // noi di "@kurtosis " %9.3f `r(kurtosis)'
.     
.     if ( "`type'" == "double" | "`type'" == "float" ) {c -(}
{txt}113{com}.       noi di "@min " %9.3f `r(min)'
{txt}114{com}.       noi di "@max " %9.3f `r(max)'
{txt}115{com}.       // noi di "@p50 " %9.3f `r(p50)'
.     {c )-} 
{txt}116{com}.     else {c -(}
{txt}117{com}.       noi di "@min " %9.0f `r(min)'
{txt}118{com}.       noi di "@max " %9.0f `r(max)'
{txt}119{com}.       // noi di "@p50 " %9.0f `r(p50)'
.     {c )-}
{txt}120{com}. {c )-}
{txt}121{com}. 
. 
. if ( ( "`class'" == "constant" ) & ( "`isstr'"!= "YES" ) ) {c -(}
{txt}122{com}.     noi di "@values " `var'[1]
{txt}123{com}. {c )-}
{txt}124{com}. else if ( "`class'" == "category" | "`class'" == "dummy" ) {c -(}
{txt}125{com}.     cap noi {c -(}
{txt}126{com}.         if ( "`isstr'" != "YES" ) {c -(}
{txt}127{com}.             cap tab `var', matcell( freq ) matrow( name )
{txt}128{com}.             if ( _rc != 0 | ("`r(r)'" != "`unique'") ) {c -(}
{txt}129{com}.                 local class = "other"
{txt}130{com}.                 local unique = r(r)
{txt}131{com}.             {c )-}
{txt}132{com}.             else {c -(}
{txt}133{com}.                 forvalues i=1/`unique' {c -(}
{txt}134{com}.                     if ( `i' == 1 ) {c -(}
{txt}135{com}.                         noi di "@values " _continue
{txt}136{com}.                     {c )-}
{txt}137{com}.                     noi di name[`i',1] _continue
{txt}138{com}.                     if ( `i' == `unique' ) {c -(}
{txt}139{com}.                         noi di ""
{txt}140{com}.                     {c )-}
{txt}141{com}.                     else {c -(}
{txt}142{com}.                         noi di ", " _continue
{txt}143{com}.                     {c )-}
{txt}144{com}.                 {c )-}
{txt}145{com}.                 forvalues i=1/`unique' {c -(}
{txt}146{com}.                     if ( `i' == 1 ) {c -(}
{txt}147{com}.                         noi di "@names " _continue
{txt}148{com}.                     {c )-}
{txt}149{com}.                     local val = name[`i',1]
{txt}150{com}.                     local lab :label (`var') `val'
{txt}151{com}.                     noi di `""`lab'""' _continue
{txt}152{com}.                     if ( `i' == `unique' ) {c -(}
{txt}153{com}.                         noi di ""
{txt}154{com}.                     {c )-}
{txt}155{com}.                     else {c -(}
{txt}156{com}.                         noi di ", " _continue
{txt}157{com}.                     {c )-}
{txt}158{com}.                 {c )-}
{txt}159{com}.                 forvalues i=1/`unique' {c -(}
{txt}160{com}.                     if ( `i' == 1 ) {c -(}
{txt}161{com}.                         noi di "@freq " _continue
{txt}162{com}.                     {c )-}
{txt}163{com}.                     noi di freq[`i',1] _continue
{txt}164{com}.                     if ( `i' == `unique' ) {c -(}
{txt}165{com}.                         noi di ""
{txt}166{com}.                     {c )-}
{txt}167{com}.                     else {c -(}
{txt}168{com}.                         noi di ", " _continue
{txt}169{com}.                     {c )-}
{txt}170{com}.                 {c )-}
{txt}171{com}.             {c )-}
{txt}172{com}.         {c )-}
{txt}173{com}.     {c )-}
{txt}174{com}. {c )-}
{txt}175{com}. else {c -(}
{txt}176{com}.     noi di "@example0 " `var'[1]
{txt}177{com}. {c )-}
{txt}178{com}. 
. // histogram
. if ( "`isstr'" != "YES" & ("`class'" == "other" | "`class'" == "identifier") ) {c -(}
{txt}179{com}. cap noi {c -(}
{txt}180{com}.     tempvar h w
{txt}181{com}.     twoway__histogram_gen `var', gen( `h' `w' )
{txt}182{com}.     forvalues i=1/`=r(n_x)' {c -(}
{txt}183{com}.         if ( `i' == 1 ) {c -(}
{txt}184{com}.             noi di "@histh " _continue
{txt}185{com}.         {c )-}
{txt}186{com}.         noi di `h'[`i'] _continue
{txt}187{com}.         if ( `i' == `=r(n_x)' ) {c -(}
{txt}188{com}.             noi di ""
{txt}189{com}.         {c )-}
{txt}190{com}.         else {c -(}
{txt}191{com}.             noi di ", " _continue
{txt}192{com}.         {c )-}
{txt}193{com}.     {c )-}
{txt}194{com}.     forvalues i=1/`=r(n_x)' {c -(}
{txt}195{com}.         if ( `i' == 1 ) {c -(}
{txt}196{com}.             noi di "@histw " _continue
{txt}197{com}.         {c )-}
{txt}198{com}.         noi di `w'[`i'] _continue
{txt}199{com}.         if ( `i' == `=r(n_x)' ) {c -(}
{txt}200{com}.             noi di ""
{txt}201{com}.         {c )-}
{txt}202{com}.         else {c -(}
{txt}203{com}.             noi di ", " _continue
{txt}204{com}.         {c )-}
{txt}205{com}.     {c )-}
{txt}206{com}.     {c )-}
{txt}207{com}. {c )-}
{txt}208{com}. 
. noi di "@type `type'"
{txt}209{com}. noi di "@label `label'"
{txt}210{com}. noi di "@class `class'"
{txt}211{com}. noi di "@N_unique `unique'"
{txt}212{com}. noi di "@N `total'"
{txt}213{com}. 
. noi di as res " "
{txt}214{com}. noi di "_@NOTES"
{txt}215{com}. 
. noi notes `var'
{txt}216{com}. 
. noi di as res " "
{txt}217{com}. {c )-}
{txt}218{com}. 
. 
. {c )-}
=====variablesinedugps2014=====
@freq 90, 90, 90, 90, 45, 45, 45, 270, 225, 270, 225, 270, 225, 45, 315, 45, 45, 45, 45, 45, 45, 45, 45, 45, 315, 225, 225
@values "Change between 2000 and 2011 in private expenditure on educational institutions, primary, secondary and post-secondary non-tertiary (2005 = 100, constant prices)", "Change between 2000 and 2011 in private expenditure on educational institutions, tertiary level (2005 = 100, constant prices)", "Change between 2000 and 2011 in public expenditure on educational institutions, primary, secondary and post-secondary non-tertiary (2005 = 100, constant prices)", "Change between 2000 and 2011 in public expenditure on educational institutions, tertiary level (2005 = 100, constant prices)", "Change between 2008 and 2011 in public expenditure for all services including education (2008=100)", "Change between 2008 and 2011 in public expenditure on education (including subsidies to households, 2008=100)", "Change between 2008 and 2011 in public expenditure on education as a percentage of total public expenditure (including subsidies to households, 2008=100)", "Change in expenditure per student, primary, secondary and post-secondary non-tertiary education (2005=100)", "Change in expenditure per student, tertiary education (2005=100) ", "Change in expenditure, primary, secondary and post-secondary non-tertiary education (2005=100)", "Change in expenditure, tertiary education (2005=100) ", "Change in the number of students, primary, secondary and post-secondary non-tertiary education (2005=100) ", "Change in the number of students, tertiary education (2005=100) ", "Cumulative expenditure per student for all services over the average duration of tertiary education (equivalent USD using PPPs)", "Expenditure on educational institutions as a percentage of GDP, all levels of education", "Expenditure on educational institutions as a percentage of GDP, from private sources, all levels of education", "Expenditure on educational institutions as a percentage of GDP, from public sources, all levels of education", "Expenditure per student on  core and ancillary services, primary, secondary and post-secondary non-tertiary education (annual, equivalent USD using PPPs) ", "Expenditure per student, pre-primary education (annual, equivalent USD using PPPs) ", "Expenditure per student, primary education (annual, equivalent USD using PPPs) ", "Expenditure per student, secondary education (annual, equivalent USD using PPPs) ", "Expenditure per student, tertiary education including R&D activities (annual, equivalent USD using PPPs) ", "Private expenditure on educational institutions, primary, secondary and post-secondary non-tertiary education (%)", "Private expenditure on educational institutions, tertiary education (%)", "Public expenditure on education as a percentage of total public expenditure", "Public expenditure on educational institutions, primary, secondary and post-secondary non-tertiary education (%)", "Public expenditure on educational institutions, tertiary education (%)"
@type str161
@label Variables in EDU GPS 2014
@class category
@N_unique 27
@N 3510
{res} 
_@NOTES
 
=====country=====
@example0 Australia
@type str28
@label Country
@class string
@N_unique 45
@N 3510
 
_@NOTES
 
=====units=====
@freq 1980, 1260, 270
@values "Index", "Percentage", "USD Equivalent"
@type str14
@label Units
@class category
@N_unique 3
@N 3510
 
_@NOTES
 
=====time=====

time:  Time                                     {txt}Number of Observations
{hline 11}                                 {hline 30}
                                            Total   Integers   Nonintegers
{c |}                  {res}#         {txt}Negative           {res}-         -          -
{txt}{c |}                  {res}#         {txt}Zero               {res}-         -          -
{txt}{c |}                  {res}#         {txt}Positive       {res} 3510      3510          -
{txt}{c |}                  {res}#                        {txt}{hline 5}     {hline 5}      {hline 5}
{c |}                  {res}#         {txt}Total          {res} 3510      3510          -
{txt}{c |}  {res}.   #   .   .   #         {txt}Missing            {res}-
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}1995               2011                      3510
   (7 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 8}time {c |}{res}      3510    2006.974    5.046597       1995       2011
@mean  2006.974
@sd     5.047
@min      1995
@max      2011
@values 1995, 2000, 2005, 2008, 2009, 2010, 2011
@names "1995", "2000", "2005", "2008", "2009", "2010", "2011"
@freq 225, 630, 180, 450, 360, 450, 1215
@type int
@label Time
@class category
@N_unique 7
@N 3510
 
_@NOTES
 
=====value=====

value:  Value                                   {txt}Number of Observations
{hline 13}                               {hline 30}
                                            Total   Integers   Nonintegers
{c |}  {res}#                         {txt}Negative           {res}-         -          -
{txt}{c |}  {res}#                         {txt}Zero           {res}    4         4          -
{txt}{c |}  {res}#                         {txt}Positive       {res} 2562        28       2534
{txt}{c |}  {res}#                                        {txt}{hline 5}     {hline 5}      {hline 5}
{c |}  {res}#                         {txt}Total          {res} 2566        32       2534
{txt}{c |}  {res}#   .   .   .   .         {txt}Missing        {res}  944
{txt}{c +}{hline 22}{col 45}{hline 5}
{res}0                110520                      3510
(More than 99 unique values)

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 7}value {c |}{res}      2566    1249.687    6487.304          0     110520
@mean  1249.687
@sd  6487.304
@min     0.000
@max  1.11e+05
@example0 16267.3
@histh .00028474, 4.556e-06, 8.033e-06, 4.196e-06, 1.678e-06, 7.193e-07, 4.796e-07, 4.796e-07, 2.398e-07, 1.199e-07, 4.796e-07, 2.398e-07, 1.199e-07, 1.199e-07, 1.199e-07, 1.199e-07, 1.199e-07, 1.199e-07, 1.199e-07, 1.199e-07, 2.398e-07, 1.199e-07, 2.398e-07, 1.199e-07
@histw 1625.2935, 4875.8804, 8126.4673, 11377.054, 14627.641, 17878.229, 21128.814, 24379.402, 27629.988, 30880.574, 34131.16, 37381.75, 47133.508, 53634.684, 56885.27, 60135.855, 63386.445, 69887.617, 73138.203, 79639.375, 82889.969, 86140.555, 92641.727, 108894.66
@type float
@label Value
@class other
@N_unique .
@N 2566
 
_@NOTES
 
=====flags=====
@freq 775, 944, 2
@values "f", "m", "n"
@type str1
@label Flags
@class category
@N_unique 3
@N 1721
 
_@NOTES
 
{com}. 
. // noi profiler report
. // profiler off
. {c )-}
{txt}
{com}. 
. exit, clear STATA
